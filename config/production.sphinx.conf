indexer
{
  mem_limit = 128M
}

searchd
{
  listen = 127.0.0.1:9318:mysql41
  log = /Users/guillaume/src/moovies/log/production.searchd.log
  query_log = /Users/guillaume/src/moovies/log/production.searchd.query.log
  pid_file = /home/webapps/plush/pre_production/shared/tmp/searchd.pid
  max_matches = 1000
  workers = threads
  binlog_path = /Users/guillaume/src/moovies/tmp/binlog/production
}

source actor_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = moovies_development
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `actors`.`actors_id` * 4 + 0 AS `actors_id`, 'Actor' AS `sphinx_internal_class_name`, `actors`.`actors_name` AS `actors_name`, `actors`.`actors_id` AS `sphinx_internal_id`, 'Actor' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, `actors`.`actors_type` AS `kind`, if(actors_type='dvd_adult',0,1) AS `kind_int`, `actors`.`image_active` AS `image_active` FROM `actors`  WHERE (`actors`.`actors_id` BETWEEN $start AND $end) GROUP BY `actors`.`actors_id`, `actors`.`actors_name`, `actors`.`actors_id`, `actors`.`actors_type`, `actors`.`image_active` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`actors`.`actors_id`), 1), IFNULL(MAX(`actors`.`actors_id`), 1) FROM `actors` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = kind_int
  sql_attr_uint = image_active
  sql_attr_string = sphinx_internal_class
  sql_attr_string = kind
  sql_field_string = actors_name
  sql_query_info = SELECT `actors`.* FROM `actors`  WHERE (`actors`.`actors_id` = ($id - 0) / 4)
}

index actor_core
{
  type = plain
  path = /home/webapps/plush/pre_production/shared/db/sphinx/actor_core
  docinfo = extern
  charset_type = utf-8
  ignore_chars = U+AD
  min_prefix_len = 2
  enable_star = 1
  source = actor_core_0
}

source director_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = moovies_development
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `directors`.`directors_id` * 4 + 1 AS `directors_id`, 'Director' AS `sphinx_internal_class_name`, `directors`.`directors_name` AS `directors_name`, `directors`.`directors_id` AS `sphinx_internal_id`, 'Director' AS `sphinx_internal_class`, 0 AS `sphinx_deleted` FROM `directors`  WHERE (`directors`.`directors_id` BETWEEN $start AND $end) GROUP BY `directors`.`directors_id`, `directors`.`directors_name`, `directors`.`directors_id` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`directors`.`directors_id`), 1), IFNULL(MAX(`directors`.`directors_id`), 1) FROM `directors` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_string = sphinx_internal_class
  sql_field_string = directors_name
  sql_query_info = SELECT `directors`.* FROM `directors`  WHERE (`directors`.`directors_id` = ($id - 1) / 4)
}

index director_core
{
  type = plain
  path = /home/webapps/plush/pre_production/shared/db/sphinx/director_core
  docinfo = extern
  charset_type = utf-8
  ignore_chars = U+AD
  min_prefix_len = 2
  enable_star = 1
  source = director_core_0
}

source product_be_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = moovies_development
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `products`.`products_id` * 4 + 2 AS `products_id`, 'Product' AS `sphinx_internal_class_name`, GROUP_CONCAT(products_description.`products_name` SEPARATOR ' ') AS `descriptions_title`, `products`.`products_id` AS `sphinx_internal_id`, 'Product' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, CRC32(products_type) AS `kind`, `products`.`products_countries_id` AS `country_id`, UNIX_TIMESTAMP(`products`.`products_date_available`) AS `available_at`, UNIX_TIMESTAMP(`products`.`products_date_added`) AS `created_at`, `products`.`products_id` AS `product_id`, CAST(vod_next AS SIGNED) AS `vod_next`, CAST(vod_next_lux AS SIGNED) AS `vod_next_lux`, CAST(vod_next_nl AS SIGNED) AS `vod_next_nl`, `products`.`products_public` AS `audience`, `products`.`products_year` AS `year`, `products`.`products_rating` AS `dvdpost_rating`, `products`.`imdb_id` AS `imdb_id`, `products`.`package_id` AS `package_id`, GROUP_CONCAT(actors.`actors_id` SEPARATOR ',') AS `actors_id`, GROUP_CONCAT(categories.`categories_id` SEPARATOR ',') AS `category_id`, directors.`directors_id` AS `director_id`, studio.`studio_id` AS `studio_id`, cast((cast((rating_users/rating_count)*2 AS SIGNED)/2) as decimal(2,1)) AS `rating`, GROUP_CONCAT(streaming_products.`imdb_id` SEPARATOR ',') AS `streaming_imdb_id`, GROUP_CONCAT(streaming_products.`language_id` SEPARATOR ',') AS `language_ids`, GROUP_CONCAT(streaming_products.`subtitle_id` SEPARATOR ',') AS `subtitle_ids`, ifnull(concat('2',replace(if(min(vod_online_bes_products.expire_at) > date(now()),min(vod_online_bes_products.available_from),null),'-','')),ifnull(concat('2',replace(min(vod_online_bes_products.available_backcatalogue_from), '-','')), ifnull(concat('1',replace(if(min(streaming_products.expire_at) > date(now()),min(streaming_products.available_from),null), '-','')),concat('1',replace(min(streaming_products.available_backcatalogue_from), '-',''))))) AS `streaming_available_at_order`, UNIX_TIMESTAMP(ifnull(if(min(vod_online_bes_products.expire_at) > date(now()),min(vod_online_bes_products.available_from),null),ifnull(min(vod_online_bes_products.available_backcatalogue_from), ifnull(if(min(streaming_products.expire_at) > date(now()),min(streaming_products.available_from),null),min(streaming_products.available_backcatalogue_from))))) AS `streaming_available_at`, GROUP_CONCAT(vod_online_bes_products.`imdb_id` SEPARATOR ',') AS `imdb_id_online`, GROUP_CONCAT(vod_online_bes_products.`language_id` SEPARATOR ',') AS `online_language_ids`, GROUP_CONCAT(vod_online_bes_products.`subtitle_id` SEPARATOR ',') AS `online_subtitle_ids`, (select count(*) c from tokens where tokens.imdb_id = products.imdb_id and (datediff(now(),created_at) < 8)) AS `count_tokens`, UNIX_TIMESTAMP((select start_on svod_start from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on > now() or end_on> now()) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `svod_start`, UNIX_TIMESTAMP((select end_on svod_end from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on > now() or end_on> now())  where p.imdb_id =products.imdb_id order by sd.start_on limit 1)) AS `svod_end`, UNIX_TIMESTAMP((select ifnull(end_on,ifnull((select end_on from svod_dates where imdb_id=products.imdb_id and svod_dates.start_on < date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()),min(available_from),min(available_backcatalogue_from)))) svod_start from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('to_upload','uploaded','soon','online_test_ok') and country ='BE' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `tvod_start`, UNIX_TIMESTAMP((select if(end_on,null,ifnull((select start_on from svod_dates where imdb_id= products.imdb_id and svod_dates.start_on > date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()) and DATEDIFF(available_backcatalogue_from,expire_at) > 6 ,min(expire_at),min(expire_backcatalogue_at)))) svod_end from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('to_upload','uploaded','soon','online_test_ok') and country ='BE' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `tvod_end`, concat(GROUP_CONCAT(DISTINCT IFNULL(`vod_online_bes_products`.`language_id`, '0') SEPARATOR ','),',', GROUP_CONCAT(DISTINCT IFNULL(`vod_online_bes_products`.`subtitle_id`, '0') SEPARATOR ',')) AS `audio_sub`, (select products_name AS products_name_ord from products_description pd where  language_id = 1 and pd.products_id = products.products_id) AS `descriptions_title_fr`, (select products_name AS products_name_ord from products_description pd where  language_id = 2 and pd.products_id = products.products_id) AS `descriptions_title_nl`, (select products_name AS products_name_ord from products_description pd where  language_id = 3 and pd.products_id = products.products_id) AS `descriptions_title_en` FROM `products` LEFT OUTER JOIN `products_description` ON `products_description`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `products_to_actors` ON `products_to_actors`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `actors` ON `actors`.`actors_id` = `products_to_actors`.`actors_id` LEFT OUTER JOIN `products_to_categories` ON `products_to_categories`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `categories` ON `categories`.`categories_id` = `products_to_categories`.`categories_id` LEFT OUTER JOIN `directors` ON `directors`.`directors_id` = `products`.`products_directors_id` LEFT OUTER JOIN `studio` ON `studio`.`studio_id` = `products`.`products_studio` LEFT OUTER JOIN `streaming_products` ON `streaming_products`.`imdb_id` = `products`.`imdb_id` AND streaming_products.available = 1 and streaming_products.country ='BE' and streaming_products.status in ('online_test_ok', 'soon', 'uploaded','to_upload') and (streaming_products.expire_backcatalogue_at is null or streaming_products.expire_backcatalogue_at > now()) LEFT OUTER JOIN `streaming_products` `vod_online_bes_products` ON `vod_online_bes_products`.`imdb_id` = `products`.`imdb_id` AND streaming_products.available = 1 and streaming_products.country ='BE' and streaming_products.status = 'online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) WHERE (`products`.`products_id` BETWEEN $start AND $end) GROUP BY `products`.`products_id`, `products`.`products_id`, `products`.`products_countries_id`, `products`.`products_date_available`, `products`.`products_date_added`, `products`.`products_id`, `products`.`products_public`, `products`.`products_year`, `products`.`products_rating`, `products`.`imdb_id`, `products`.`package_id`, directors.`directors_id`, studio.`studio_id` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`products`.`products_id`), 1), IFNULL(MAX(`products`.`products_id`), 1) FROM `products` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = kind
  sql_attr_uint = country_id
  sql_attr_uint = product_id
  sql_attr_uint = vod_next
  sql_attr_uint = vod_next_lux
  sql_attr_uint = vod_next_nl
  sql_attr_uint = audience
  sql_attr_uint = year
  sql_attr_uint = dvdpost_rating
  sql_attr_uint = imdb_id
  sql_attr_uint = package_id
  sql_attr_uint = director_id
  sql_attr_uint = studio_id
  sql_attr_uint = streaming_available_at_order
  sql_attr_uint = count_tokens
  sql_attr_timestamp = available_at
  sql_attr_timestamp = created_at
  sql_attr_timestamp = streaming_available_at
  sql_attr_timestamp = svod_start
  sql_attr_timestamp = svod_end
  sql_attr_timestamp = tvod_start
  sql_attr_timestamp = tvod_end
  sql_attr_float = rating
  sql_attr_multi = uint actors_id from field
  sql_attr_multi = uint category_id from field
  sql_attr_multi = uint streaming_imdb_id from field
  sql_attr_multi = uint language_ids from field
  sql_attr_multi = uint subtitle_ids from field
  sql_attr_multi = uint imdb_id_online from field
  sql_attr_multi = uint online_language_ids from field
  sql_attr_multi = uint online_subtitle_ids from field
  sql_attr_multi = uint audio_sub from field
  sql_attr_string = sphinx_internal_class
  sql_attr_string = descriptions_title_fr
  sql_attr_string = descriptions_title_nl
  sql_attr_string = descriptions_title_en
  sql_query_info = SELECT `products`.* FROM `products`  WHERE (`products`.`products_id` = ($id - 2) / 4)
}

index product_be_core
{
  type = plain
  path = /home/webapps/plush/pre_production/shared/db/sphinx/product_be_core
  docinfo = extern
  charset_type = utf-8
  ignore_chars = U+AD
  min_prefix_len = 3
  enable_star = 1
  source = product_be_core_0
}

source product_lu_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = moovies_development
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `products`.`products_id` * 4 + 2 AS `products_id`, 'Product' AS `sphinx_internal_class_name`, `products`.`products_type` AS `products_type`, `products`.`products_id` AS `sphinx_internal_id`, 'Product' AS `sphinx_internal_class`, 0 AS `sphinx_deleted` FROM `products`  WHERE (`products`.`products_id` BETWEEN $start AND $end) GROUP BY `products`.`products_id`, `products`.`products_type`, `products`.`products_id` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`products`.`products_id`), 1), IFNULL(MAX(`products`.`products_id`), 1) FROM `products` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_string = sphinx_internal_class
  sql_query_info = SELECT `products`.* FROM `products`  WHERE (`products`.`products_id` = ($id - 2) / 4)
}

index product_lu_core
{
  type = plain
  path = /home/webapps/plush/pre_production/shared/db/sphinx/product_lu_core
  docinfo = extern
  charset_type = utf-8
  source = product_lu_core_0
}
