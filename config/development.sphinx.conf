
indexer
{
  mem_limit = 128M
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /home/popac/PROJECTS/DVDPost/moovies/log/development.searchd.log
  query_log = /home/popac/PROJECTS/DVDPost/moovies/log/development.searchd.query.log
  pid_file = log/searchd.pid
  max_matches = 1000
  workers = threads
  binlog_path = /home/popac/PROJECTS/DVDPost/moovies/tmp/binlog/development
}

source actor_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = root
  sql_db = plush_staging
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `actors`.`actors_id` * 6 + 0 AS `actors_id`, `actors`.`actors_name` AS `actors_name`, `actors`.`actors_id` AS `sphinx_internal_id`, 'Actor' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, `actors`.`actors_type` AS `kind`, if(actors_type='dvd_adult',0,1) AS `kind_int`, `actors`.`image_active` AS `image_active` FROM `actors`  WHERE (`actors`.`actors_id` BETWEEN $start AND $end) GROUP BY `actors`.`actors_id`, `actors`.`actors_name`, `actors`.`actors_id`, `actors`.`actors_type`, `actors`.`image_active` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`actors`.`actors_id`), 1), IFNULL(MAX(`actors`.`actors_id`), 1) FROM `actors` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = kind_int
  sql_attr_uint = image_active
  sql_attr_string = sphinx_internal_class
  sql_attr_string = kind
  sql_field_string = actors_name
  sql_query_info = SELECT `actors`.* FROM `actors`  WHERE (`actors`.`actors_id` = ($id - 0) / 6)
}

index actor_core
{
  type = plain
  path = /home/popac/PROJECTS/DVDPost/moovies/db/sphinx/development/actor_core
  docinfo = extern
  morphology = stem_en, libstemmer_fr
  charset_type = utf-8
  charset_table = 0..9, a..z, _, A..Z->a..z, U+00C0->a, U+00C1->a,U+00C2->a, U+00C3->a, U+00C4->a, U+00C5->a, U+00C7->c, U+00C8->e,U+00C9->e, U+00CA->e, U+00CB->e, U+00CC->i, U+00CD->i, U+00CE->i,U+00CF->i, U+00D1->n, U+00D2->o, U+00D3->o, U+00D4->o, U+00D5->o,U+00D6->o, U+00D8->o, U+00D9->u, U+00DA->u, U+00DB->u, U+00DC->u,U+00DD->y, U+00E0->a, U+00E1->a, U+00E2->a, U+00E3->a, U+00E4->a,U+00E5->a, U+00E7->c, U+00E8->e, U+00E9->e, U+00EA->e, U+00EB->e,U+00EC->i, U+00ED->i, U+00EE->i, U+00EF->i, U+00F1->n, U+00F2->o,U+00F3->o, U+00F4->o, U+00F5->o, U+00F6->o, U+00F8->o, U+00F9->u,U+00FA->u, U+00FB->u, U+00FC->u, U+00FD->y, U+00FF->y, U+0100->a,U+0101->a, U+0102->a, U+0103->a, U+0104->a, U+0105->a, U+0106->c,U+0107->c, U+0108->c, U+0109->c, U+010A->c, U+010B->c, U+010C->c,U+010D->c, U+010E->d, U+010F->d, U+0112->e, U+0113->e, U+0114->e,U+0115->e, U+0116->e, U+0117->e, U+0118->e, U+0119->e, U+011A->e,U+011B->e, U+011C->g, U+011D->g, U+011E->g, U+011F->g, U+0120->g,U+0121->g, U+0122->g, U+0123->g, U+0124->h, U+0125->h, U+0128->i,U+0129->i, U+0131->i, U+012A->i, U+012B->i, U+012C->i, U+012D->i,U+012E->i, U+012F->i, U+0130->i, U+0134->j, U+0135->j, U+0136->k,U+0137->k, U+0139->l, U+013A->l, U+013B->l, U+013C->l, U+013D->l,U+013E->l, U+0142->l, U+0143->n, U+0144->n, U+0145->n, U+0146->n,U+0147->n, U+0148->n, U+014C->o, U+014D->o, U+014E->o, U+014F->o,U+0150->o, U+0151->o, U+0154->r, U+0155->r, U+0156->r, U+0157->r,U+0158->r, U+0159->r, U+015A->s, U+015B->s, U+015C->s, U+015D->s,U+015E->s, U+015F->s, U+0160->s, U+0161->s, U+0162->t, U+0163->t,U+0164->t, U+0165->t, U+0168->u, U+0169->u, U+016A->u, U+016B->u,U+016C->u, U+016D->u, U+016E->u, U+016F->u, U+0170->u, U+0171->u,U+0172->u, U+0173->u, U+0174->w, U+0175->w, U+0176->y, U+0177->y,U+0178->y, U+0179->z, U+017A->z, U+017B->z, U+017C->z, U+017D->z,U+017E->z, U+01A0->o, U+01A1->o, U+01AF->u, U+01B0->u, U+01CD->a,U+01CE->a, U+01CF->i, U+01D0->i, U+01D1->o, U+01D2->o, U+01D3->u,U+01D4->u, U+01D5->u, U+01D6->u, U+01D7->u, U+01D8->u, U+01D9->u,U+01DA->u, U+01DB->u, U+01DC->u, U+01DE->a, U+01DF->a, U+01E0->a,U+01E1->a, U+01E6->g, U+01E7->g, U+01E8->k, U+01E9->k, U+01EA->o,U+01EB->o, U+01EC->o, U+01ED->o, U+01F0->j, U+01F4->g, U+01F5->g,U+01F8->n, U+01F9->n, U+01FA->a, U+01FB->a, U+0200->a, U+0201->a,U+0202->a, U+0203->a, U+0204->e, U+0205->e, U+0206->e, U+0207->e,U+0208->i, U+0209->i, U+020A->i, U+020B->i, U+020C->o, U+020D->o,U+020E->o, U+020F->o, U+0210->r, U+0211->r, U+0212->r, U+0213->r,U+0214->u, U+0215->u, U+0216->u, U+0217->u, U+0218->s, U+0219->s,U+021A->t, U+021B->t, U+021E->h, U+021F->h, U+0226->a, U+0227->a,U+0228->e, U+0229->e, U+022A->o, U+022B->o, U+022C->o, U+022D->o,U+022E->o, U+022F->o, U+0230->o, U+0231->o, U+0232->y, U+0233->y,U+1E00->a, U+1E01->a, U+1E02->b, U+1E03->b, U+1E04->b, U+1E05->b,U+1E06->b, U+1E07->b, U+1E08->c, U+1E09->c, U+1E0A->d, U+1E0B->d,U+1E0C->d, U+1E0D->d, U+1E0E->d, U+1E0F->d, U+1E10->d, U+1E11->d,U+1E12->d, U+1E13->d, U+1E14->e, U+1E15->e, U+1E16->e, U+1E17->e,U+1E18->e, U+1E19->e, U+1E1A->e, U+1E1B->e, U+1E1C->e, U+1E1D->e,U+1E1E->f, U+1E1F->f, U+1E20->g, U+1E21->g, U+1E22->h, U+1E23->h,U+1E24->h, U+1E25->h, U+1E26->h, U+1E27->h, U+1E28->h, U+1E29->h,U+1E2A->h, U+1E2B->h, U+1E2C->i, U+1E2D->i, U+1E2E->i, U+1E2F->i,U+1E30->k, U+1E31->k, U+1E32->k, U+1E33->k, U+1E34->k, U+1E35->k,U+1E36->l, U+1E37->l, U+1E38->l, U+1E39->l, U+1E3A->l, U+1E3B->l,U+1E3C->l, U+1E3D->l, U+1E3E->m, U+1E3F->m, U+1E40->m, U+1E41->m,U+1E42->m, U+1E43->m, U+1E44->n, U+1E45->n, U+1E46->n, U+1E47->n,U+1E48->n, U+1E49->n, U+1E4A->n, U+1E4B->n, U+1E4C->o, U+1E4D->o,U+1E4E->o, U+1E4F->o, U+1E50->o, U+1E51->o, U+1E52->o, U+1E53->o,U+1E54->p, U+1E55->p, U+1E56->p, U+1E57->p, U+1E58->r, U+1E59->r,U+1E5A->r, U+1E5B->r, U+1E5C->r, U+1E5D->r, U+1E5E->r, U+1E5F->r,U+1E60->s, U+1E61->s, U+1E62->s, U+1E63->s, U+1E64->s, U+1E65->s,U+1E66->s, U+1E67->s, U+1E68->s, U+1E69->s, U+1E6A->t, U+1E6B->t,U+1E6C->t, U+1E6D->t, U+1E6E->t, U+1E6F->t, U+1E70->t, U+1E71->t,U+1E72->u, U+1E73->u, U+1E74->u, U+1E75->u, U+1E76->u, U+1E77->u,U+1E78->u, U+1E79->u, U+1E7A->u, U+1E7B->u, U+1E7C->v, U+1E7D->v,U+1E7E->v, U+1E7F->v, U+1E80->w, U+1E81->w, U+1E82->w, U+1E83->w,U+1E84->w, U+1E85->w, U+1E86->w, U+1E87->w, U+1E88->w, U+1E89->w,U+1E8A->x, U+1E8B->x, U+1E8C->x, U+1E8D->x, U+1E8E->y, U+1E8F->y,U+1E96->h, U+1E97->t, U+1E98->w, U+1E99->y, U+1EA0->a, U+1EA1->a,U+1EA2->a, U+1EA3->a, U+1EA4->a, U+1EA5->a, U+1EA6->a, U+1EA7->a,U+1EA8->a, U+1EA9->a, U+1EAA->a, U+1EAB->a, U+1EAC->a, U+1EAD->a,U+1EAE->a, U+1EAF->a, U+1EB0->a, U+1EB1->a, U+1EB2->a, U+1EB3->a,U+1EB4->a, U+1EB5->a, U+1EB6->a, U+1EB7->a, U+1EB8->e, U+1EB9->e,U+1EBA->e, U+1EBB->e, U+1EBC->e, U+1EBD->e, U+1EBE->e, U+1EBF->e,U+1EC0->e, U+1EC1->e, U+1EC2->e, U+1EC3->e, U+1EC4->e, U+1EC5->e,U+1EC6->e, U+1EC7->e, U+1EC8->i, U+1EC9->i, U+1ECA->i, U+1ECB->i,U+1ECC->o, U+1ECD->o, U+1ECE->o, U+1ECF->o, U+1ED0->o, U+1ED1->o,U+1ED2->o, U+1ED3->o, U+1ED4->o, U+1ED5->o, U+1ED6->o, U+1ED7->o,U+1ED8->o, U+1ED9->o, U+1EDA->o, U+1EDB->o, U+1EDC->o, U+1EDD->o,U+1EDE->o, U+1EDF->o, U+1EE0->o, U+1EE1->o, U+1EE2->o, U+1EE3->o,U+1EE4->u, U+1EE5->u, U+1EE6->u, U+1EE7->u, U+1EE8->u, U+1EE9->u,U+1EEA->u, U+1EEB->u, U+1EEC->u, U+1EED->u, U+1EEE->u, U+1EEF->u,U+1EF0->u, U+1EF1->u, U+1EF2->y, U+1EF3->y, U+1EF4->y, U+1EF5->y,U+1EF6->y, U+1EF7->y, U+1EF8->y, U+1EF9->y
  ignore_chars = U+AD
  min_prefix_len = 2
  enable_star = 1
  source = actor_core_0
}

source category_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = root
  sql_db = plush_staging
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `categories`.`categories_id` * 6 + 1 AS `categories_id`, GROUP_CONCAT(DISTINCT categories_name SEPARATOR ' ') AS `name`, `categories`.`categories_id` AS `sphinx_internal_id`, 'Category' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, if(active = 'YES', 1,0) AS `active`, `categories`.`parent_id` AS `parent_id`, CRC32(categories_type) AS `type`, (select count(*) from products_to_categories join products p on p.products_id = products_to_categories.products_id join streaming_products on streaming_products.imdb_id = p.imdb_id and available = 1 and status='online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) and country='be' where products_to_categories.categories_id = `categories`.`categories_id` and p.package_id in(1,4) and products_status !=-1  ) AS `count_svod_be`, (select count(*) from products_to_categories join products p on p.products_id = products_to_categories.products_id join streaming_products on streaming_products.imdb_id = p.imdb_id and available = 1 and status='online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) and country='nl' where products_to_categories.categories_id = `categories`.`categories_id` and p.package_id in(1,4) and products_status !=-1  ) AS `count_svod_nl`, (select count(*) from products_to_categories join products p on p.products_id = products_to_categories.products_id join streaming_products on streaming_products.imdb_id = p.imdb_id and available = 1 and status='online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) and country='lu' where products_to_categories.categories_id = `categories`.`categories_id` and p.package_id in(1,4) and products_status !=-1  ) AS `count_svod_lu`, (select count(*) from products_to_categories join products p on p.products_id = products_to_categories.products_id join streaming_products on streaming_products.imdb_id = p.imdb_id and available = 1 and status='online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) and country='be' where products_to_categories.categories_id = `categories`.`categories_id` and p.package_id in(2,5) and products_status !=-1  ) AS `count_tvod_be`, (select count(*) from products_to_categories join products p on p.products_id = products_to_categories.products_id join streaming_products on streaming_products.imdb_id = p.imdb_id and available = 1 and status='online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) and country='nl' where products_to_categories.categories_id = `categories`.`categories_id` and p.package_id in(2,5) and products_status !=-1  ) AS `count_tvod_nl`, (select count(*) from products_to_categories join products p on p.products_id = products_to_categories.products_id join streaming_products on streaming_products.imdb_id = p.imdb_id and available = 1 and status='online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) and country='lu' where products_to_categories.categories_id = `categories`.`categories_id` and p.package_id in(2,5) and products_status !=-1  ) AS `count_tvod_lu`, (select CRC32(if(substring(categories_name,1,1) REGEXP "^[0-9]", 0,substring(categories_name,1,1)))  from `categories_description` cd where cd.categories_id= `categories`.`categories_id` and cd.language_id = 1 limit 1) AS `first_fr_int`, (select CRC32(if(substring(categories_name,1,1) REGEXP "^[0-9]", 0,substring(categories_name,1,1)))  from `categories_description` cd where cd.categories_id= `categories`.`categories_id` and cd.language_id = 2 limit 1) AS `first_nl_int`, (select CRC32(if(substring(categories_name,1,1) REGEXP "^[0-9]", 0,substring(categories_name,1,1)))  from `categories_description` cd where cd.categories_id= `categories`.`categories_id` and cd.language_id = 3 limit 1) AS `first_en_int`, (select categories_name  from `categories_description` cd where cd.categories_id= `categories`.`categories_id` and cd.language_id = 1 limit 1) AS `name_fr`, (select categories_name  from `categories_description` cd where cd.categories_id= `categories`.`categories_id` and cd.language_id = 2 limit 1) AS `name_nl`, (select categories_name  from `categories_description` cd where cd.categories_id= `categories`.`categories_id` and cd.language_id = 2 limit 1) AS `name_en` FROM `categories` LEFT OUTER JOIN `categories_description` ON `categories_description`.`categories_id` = `categories`.`categories_id` WHERE (`categories`.`categories_id` BETWEEN $start AND $end) GROUP BY `categories`.`categories_id`, `categories`.`categories_id`, `categories`.`parent_id` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`categories`.`categories_id`), 1), IFNULL(MAX(`categories`.`categories_id`), 1) FROM `categories` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = active
  sql_attr_uint = parent_id
  sql_attr_uint = type
  sql_attr_uint = count_svod_be
  sql_attr_uint = count_svod_nl
  sql_attr_uint = count_svod_lu
  sql_attr_uint = count_tvod_be
  sql_attr_uint = count_tvod_nl
  sql_attr_uint = count_tvod_lu
  sql_attr_uint = first_fr_int
  sql_attr_uint = first_nl_int
  sql_attr_uint = first_en_int
  sql_attr_string = sphinx_internal_class
  sql_attr_string = name_fr
  sql_attr_string = name_nl
  sql_attr_string = name_en
  sql_query_info = SELECT `categories`.* FROM `categories`  WHERE (`categories`.`categories_id` = ($id - 1) / 6)
}

index category_core
{
  type = plain
  path = /home/popac/PROJECTS/DVDPost/moovies/db/sphinx/development/category_core
  docinfo = extern
  morphology = stem_en, libstemmer_fr
  charset_type = utf-8
  charset_table = 0..9, a..z, _, A..Z->a..z, U+00C0->a, U+00C1->a,U+00C2->a, U+00C3->a, U+00C4->a, U+00C5->a, U+00C7->c, U+00C8->e,U+00C9->e, U+00CA->e, U+00CB->e, U+00CC->i, U+00CD->i, U+00CE->i,U+00CF->i, U+00D1->n, U+00D2->o, U+00D3->o, U+00D4->o, U+00D5->o,U+00D6->o, U+00D8->o, U+00D9->u, U+00DA->u, U+00DB->u, U+00DC->u,U+00DD->y, U+00E0->a, U+00E1->a, U+00E2->a, U+00E3->a, U+00E4->a,U+00E5->a, U+00E7->c, U+00E8->e, U+00E9->e, U+00EA->e, U+00EB->e,U+00EC->i, U+00ED->i, U+00EE->i, U+00EF->i, U+00F1->n, U+00F2->o,U+00F3->o, U+00F4->o, U+00F5->o, U+00F6->o, U+00F8->o, U+00F9->u,U+00FA->u, U+00FB->u, U+00FC->u, U+00FD->y, U+00FF->y, U+0100->a,U+0101->a, U+0102->a, U+0103->a, U+0104->a, U+0105->a, U+0106->c,U+0107->c, U+0108->c, U+0109->c, U+010A->c, U+010B->c, U+010C->c,U+010D->c, U+010E->d, U+010F->d, U+0112->e, U+0113->e, U+0114->e,U+0115->e, U+0116->e, U+0117->e, U+0118->e, U+0119->e, U+011A->e,U+011B->e, U+011C->g, U+011D->g, U+011E->g, U+011F->g, U+0120->g,U+0121->g, U+0122->g, U+0123->g, U+0124->h, U+0125->h, U+0128->i,U+0129->i, U+0131->i, U+012A->i, U+012B->i, U+012C->i, U+012D->i,U+012E->i, U+012F->i, U+0130->i, U+0134->j, U+0135->j, U+0136->k,U+0137->k, U+0139->l, U+013A->l, U+013B->l, U+013C->l, U+013D->l,U+013E->l, U+0142->l, U+0143->n, U+0144->n, U+0145->n, U+0146->n,U+0147->n, U+0148->n, U+014C->o, U+014D->o, U+014E->o, U+014F->o,U+0150->o, U+0151->o, U+0154->r, U+0155->r, U+0156->r, U+0157->r,U+0158->r, U+0159->r, U+015A->s, U+015B->s, U+015C->s, U+015D->s,U+015E->s, U+015F->s, U+0160->s, U+0161->s, U+0162->t, U+0163->t,U+0164->t, U+0165->t, U+0168->u, U+0169->u, U+016A->u, U+016B->u,U+016C->u, U+016D->u, U+016E->u, U+016F->u, U+0170->u, U+0171->u,U+0172->u, U+0173->u, U+0174->w, U+0175->w, U+0176->y, U+0177->y,U+0178->y, U+0179->z, U+017A->z, U+017B->z, U+017C->z, U+017D->z,U+017E->z, U+01A0->o, U+01A1->o, U+01AF->u, U+01B0->u, U+01CD->a,U+01CE->a, U+01CF->i, U+01D0->i, U+01D1->o, U+01D2->o, U+01D3->u,U+01D4->u, U+01D5->u, U+01D6->u, U+01D7->u, U+01D8->u, U+01D9->u,U+01DA->u, U+01DB->u, U+01DC->u, U+01DE->a, U+01DF->a, U+01E0->a,U+01E1->a, U+01E6->g, U+01E7->g, U+01E8->k, U+01E9->k, U+01EA->o,U+01EB->o, U+01EC->o, U+01ED->o, U+01F0->j, U+01F4->g, U+01F5->g,U+01F8->n, U+01F9->n, U+01FA->a, U+01FB->a, U+0200->a, U+0201->a,U+0202->a, U+0203->a, U+0204->e, U+0205->e, U+0206->e, U+0207->e,U+0208->i, U+0209->i, U+020A->i, U+020B->i, U+020C->o, U+020D->o,U+020E->o, U+020F->o, U+0210->r, U+0211->r, U+0212->r, U+0213->r,U+0214->u, U+0215->u, U+0216->u, U+0217->u, U+0218->s, U+0219->s,U+021A->t, U+021B->t, U+021E->h, U+021F->h, U+0226->a, U+0227->a,U+0228->e, U+0229->e, U+022A->o, U+022B->o, U+022C->o, U+022D->o,U+022E->o, U+022F->o, U+0230->o, U+0231->o, U+0232->y, U+0233->y,U+1E00->a, U+1E01->a, U+1E02->b, U+1E03->b, U+1E04->b, U+1E05->b,U+1E06->b, U+1E07->b, U+1E08->c, U+1E09->c, U+1E0A->d, U+1E0B->d,U+1E0C->d, U+1E0D->d, U+1E0E->d, U+1E0F->d, U+1E10->d, U+1E11->d,U+1E12->d, U+1E13->d, U+1E14->e, U+1E15->e, U+1E16->e, U+1E17->e,U+1E18->e, U+1E19->e, U+1E1A->e, U+1E1B->e, U+1E1C->e, U+1E1D->e,U+1E1E->f, U+1E1F->f, U+1E20->g, U+1E21->g, U+1E22->h, U+1E23->h,U+1E24->h, U+1E25->h, U+1E26->h, U+1E27->h, U+1E28->h, U+1E29->h,U+1E2A->h, U+1E2B->h, U+1E2C->i, U+1E2D->i, U+1E2E->i, U+1E2F->i,U+1E30->k, U+1E31->k, U+1E32->k, U+1E33->k, U+1E34->k, U+1E35->k,U+1E36->l, U+1E37->l, U+1E38->l, U+1E39->l, U+1E3A->l, U+1E3B->l,U+1E3C->l, U+1E3D->l, U+1E3E->m, U+1E3F->m, U+1E40->m, U+1E41->m,U+1E42->m, U+1E43->m, U+1E44->n, U+1E45->n, U+1E46->n, U+1E47->n,U+1E48->n, U+1E49->n, U+1E4A->n, U+1E4B->n, U+1E4C->o, U+1E4D->o,U+1E4E->o, U+1E4F->o, U+1E50->o, U+1E51->o, U+1E52->o, U+1E53->o,U+1E54->p, U+1E55->p, U+1E56->p, U+1E57->p, U+1E58->r, U+1E59->r,U+1E5A->r, U+1E5B->r, U+1E5C->r, U+1E5D->r, U+1E5E->r, U+1E5F->r,U+1E60->s, U+1E61->s, U+1E62->s, U+1E63->s, U+1E64->s, U+1E65->s,U+1E66->s, U+1E67->s, U+1E68->s, U+1E69->s, U+1E6A->t, U+1E6B->t,U+1E6C->t, U+1E6D->t, U+1E6E->t, U+1E6F->t, U+1E70->t, U+1E71->t,U+1E72->u, U+1E73->u, U+1E74->u, U+1E75->u, U+1E76->u, U+1E77->u,U+1E78->u, U+1E79->u, U+1E7A->u, U+1E7B->u, U+1E7C->v, U+1E7D->v,U+1E7E->v, U+1E7F->v, U+1E80->w, U+1E81->w, U+1E82->w, U+1E83->w,U+1E84->w, U+1E85->w, U+1E86->w, U+1E87->w, U+1E88->w, U+1E89->w,U+1E8A->x, U+1E8B->x, U+1E8C->x, U+1E8D->x, U+1E8E->y, U+1E8F->y,U+1E96->h, U+1E97->t, U+1E98->w, U+1E99->y, U+1EA0->a, U+1EA1->a,U+1EA2->a, U+1EA3->a, U+1EA4->a, U+1EA5->a, U+1EA6->a, U+1EA7->a,U+1EA8->a, U+1EA9->a, U+1EAA->a, U+1EAB->a, U+1EAC->a, U+1EAD->a,U+1EAE->a, U+1EAF->a, U+1EB0->a, U+1EB1->a, U+1EB2->a, U+1EB3->a,U+1EB4->a, U+1EB5->a, U+1EB6->a, U+1EB7->a, U+1EB8->e, U+1EB9->e,U+1EBA->e, U+1EBB->e, U+1EBC->e, U+1EBD->e, U+1EBE->e, U+1EBF->e,U+1EC0->e, U+1EC1->e, U+1EC2->e, U+1EC3->e, U+1EC4->e, U+1EC5->e,U+1EC6->e, U+1EC7->e, U+1EC8->i, U+1EC9->i, U+1ECA->i, U+1ECB->i,U+1ECC->o, U+1ECD->o, U+1ECE->o, U+1ECF->o, U+1ED0->o, U+1ED1->o,U+1ED2->o, U+1ED3->o, U+1ED4->o, U+1ED5->o, U+1ED6->o, U+1ED7->o,U+1ED8->o, U+1ED9->o, U+1EDA->o, U+1EDB->o, U+1EDC->o, U+1EDD->o,U+1EDE->o, U+1EDF->o, U+1EE0->o, U+1EE1->o, U+1EE2->o, U+1EE3->o,U+1EE4->u, U+1EE5->u, U+1EE6->u, U+1EE7->u, U+1EE8->u, U+1EE9->u,U+1EEA->u, U+1EEB->u, U+1EEC->u, U+1EED->u, U+1EEE->u, U+1EEF->u,U+1EF0->u, U+1EF1->u, U+1EF2->y, U+1EF3->y, U+1EF4->y, U+1EF5->y,U+1EF6->y, U+1EF7->y, U+1EF8->y, U+1EF9->y
  ignore_chars = U+AD
  min_prefix_len = 2
  enable_star = 1
  source = category_core_0
}

source director_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = root
  sql_db = plush_staging
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `directors`.`directors_id` * 6 + 2 AS `directors_id`, `directors`.`directors_name` AS `directors_name`, `directors`.`directors_id` AS `sphinx_internal_id`, 'Director' AS `sphinx_internal_class`, 0 AS `sphinx_deleted` FROM `directors`  WHERE (`directors`.`directors_id` BETWEEN $start AND $end) GROUP BY `directors`.`directors_id`, `directors`.`directors_name`, `directors`.`directors_id` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`directors`.`directors_id`), 1), IFNULL(MAX(`directors`.`directors_id`), 1) FROM `directors` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_string = sphinx_internal_class
  sql_field_string = directors_name
  sql_query_info = SELECT `directors`.* FROM `directors`  WHERE (`directors`.`directors_id` = ($id - 2) / 6)
}

index director_core
{
  type = plain
  path = /home/popac/PROJECTS/DVDPost/moovies/db/sphinx/development/director_core
  docinfo = extern
  morphology = stem_en, libstemmer_fr
  charset_type = utf-8
  charset_table = 0..9, a..z, _, A..Z->a..z, U+00C0->a, U+00C1->a,U+00C2->a, U+00C3->a, U+00C4->a, U+00C5->a, U+00C7->c, U+00C8->e,U+00C9->e, U+00CA->e, U+00CB->e, U+00CC->i, U+00CD->i, U+00CE->i,U+00CF->i, U+00D1->n, U+00D2->o, U+00D3->o, U+00D4->o, U+00D5->o,U+00D6->o, U+00D8->o, U+00D9->u, U+00DA->u, U+00DB->u, U+00DC->u,U+00DD->y, U+00E0->a, U+00E1->a, U+00E2->a, U+00E3->a, U+00E4->a,U+00E5->a, U+00E7->c, U+00E8->e, U+00E9->e, U+00EA->e, U+00EB->e,U+00EC->i, U+00ED->i, U+00EE->i, U+00EF->i, U+00F1->n, U+00F2->o,U+00F3->o, U+00F4->o, U+00F5->o, U+00F6->o, U+00F8->o, U+00F9->u,U+00FA->u, U+00FB->u, U+00FC->u, U+00FD->y, U+00FF->y, U+0100->a,U+0101->a, U+0102->a, U+0103->a, U+0104->a, U+0105->a, U+0106->c,U+0107->c, U+0108->c, U+0109->c, U+010A->c, U+010B->c, U+010C->c,U+010D->c, U+010E->d, U+010F->d, U+0112->e, U+0113->e, U+0114->e,U+0115->e, U+0116->e, U+0117->e, U+0118->e, U+0119->e, U+011A->e,U+011B->e, U+011C->g, U+011D->g, U+011E->g, U+011F->g, U+0120->g,U+0121->g, U+0122->g, U+0123->g, U+0124->h, U+0125->h, U+0128->i,U+0129->i, U+0131->i, U+012A->i, U+012B->i, U+012C->i, U+012D->i,U+012E->i, U+012F->i, U+0130->i, U+0134->j, U+0135->j, U+0136->k,U+0137->k, U+0139->l, U+013A->l, U+013B->l, U+013C->l, U+013D->l,U+013E->l, U+0142->l, U+0143->n, U+0144->n, U+0145->n, U+0146->n,U+0147->n, U+0148->n, U+014C->o, U+014D->o, U+014E->o, U+014F->o,U+0150->o, U+0151->o, U+0154->r, U+0155->r, U+0156->r, U+0157->r,U+0158->r, U+0159->r, U+015A->s, U+015B->s, U+015C->s, U+015D->s,U+015E->s, U+015F->s, U+0160->s, U+0161->s, U+0162->t, U+0163->t,U+0164->t, U+0165->t, U+0168->u, U+0169->u, U+016A->u, U+016B->u,U+016C->u, U+016D->u, U+016E->u, U+016F->u, U+0170->u, U+0171->u,U+0172->u, U+0173->u, U+0174->w, U+0175->w, U+0176->y, U+0177->y,U+0178->y, U+0179->z, U+017A->z, U+017B->z, U+017C->z, U+017D->z,U+017E->z, U+01A0->o, U+01A1->o, U+01AF->u, U+01B0->u, U+01CD->a,U+01CE->a, U+01CF->i, U+01D0->i, U+01D1->o, U+01D2->o, U+01D3->u,U+01D4->u, U+01D5->u, U+01D6->u, U+01D7->u, U+01D8->u, U+01D9->u,U+01DA->u, U+01DB->u, U+01DC->u, U+01DE->a, U+01DF->a, U+01E0->a,U+01E1->a, U+01E6->g, U+01E7->g, U+01E8->k, U+01E9->k, U+01EA->o,U+01EB->o, U+01EC->o, U+01ED->o, U+01F0->j, U+01F4->g, U+01F5->g,U+01F8->n, U+01F9->n, U+01FA->a, U+01FB->a, U+0200->a, U+0201->a,U+0202->a, U+0203->a, U+0204->e, U+0205->e, U+0206->e, U+0207->e,U+0208->i, U+0209->i, U+020A->i, U+020B->i, U+020C->o, U+020D->o,U+020E->o, U+020F->o, U+0210->r, U+0211->r, U+0212->r, U+0213->r,U+0214->u, U+0215->u, U+0216->u, U+0217->u, U+0218->s, U+0219->s,U+021A->t, U+021B->t, U+021E->h, U+021F->h, U+0226->a, U+0227->a,U+0228->e, U+0229->e, U+022A->o, U+022B->o, U+022C->o, U+022D->o,U+022E->o, U+022F->o, U+0230->o, U+0231->o, U+0232->y, U+0233->y,U+1E00->a, U+1E01->a, U+1E02->b, U+1E03->b, U+1E04->b, U+1E05->b,U+1E06->b, U+1E07->b, U+1E08->c, U+1E09->c, U+1E0A->d, U+1E0B->d,U+1E0C->d, U+1E0D->d, U+1E0E->d, U+1E0F->d, U+1E10->d, U+1E11->d,U+1E12->d, U+1E13->d, U+1E14->e, U+1E15->e, U+1E16->e, U+1E17->e,U+1E18->e, U+1E19->e, U+1E1A->e, U+1E1B->e, U+1E1C->e, U+1E1D->e,U+1E1E->f, U+1E1F->f, U+1E20->g, U+1E21->g, U+1E22->h, U+1E23->h,U+1E24->h, U+1E25->h, U+1E26->h, U+1E27->h, U+1E28->h, U+1E29->h,U+1E2A->h, U+1E2B->h, U+1E2C->i, U+1E2D->i, U+1E2E->i, U+1E2F->i,U+1E30->k, U+1E31->k, U+1E32->k, U+1E33->k, U+1E34->k, U+1E35->k,U+1E36->l, U+1E37->l, U+1E38->l, U+1E39->l, U+1E3A->l, U+1E3B->l,U+1E3C->l, U+1E3D->l, U+1E3E->m, U+1E3F->m, U+1E40->m, U+1E41->m,U+1E42->m, U+1E43->m, U+1E44->n, U+1E45->n, U+1E46->n, U+1E47->n,U+1E48->n, U+1E49->n, U+1E4A->n, U+1E4B->n, U+1E4C->o, U+1E4D->o,U+1E4E->o, U+1E4F->o, U+1E50->o, U+1E51->o, U+1E52->o, U+1E53->o,U+1E54->p, U+1E55->p, U+1E56->p, U+1E57->p, U+1E58->r, U+1E59->r,U+1E5A->r, U+1E5B->r, U+1E5C->r, U+1E5D->r, U+1E5E->r, U+1E5F->r,U+1E60->s, U+1E61->s, U+1E62->s, U+1E63->s, U+1E64->s, U+1E65->s,U+1E66->s, U+1E67->s, U+1E68->s, U+1E69->s, U+1E6A->t, U+1E6B->t,U+1E6C->t, U+1E6D->t, U+1E6E->t, U+1E6F->t, U+1E70->t, U+1E71->t,U+1E72->u, U+1E73->u, U+1E74->u, U+1E75->u, U+1E76->u, U+1E77->u,U+1E78->u, U+1E79->u, U+1E7A->u, U+1E7B->u, U+1E7C->v, U+1E7D->v,U+1E7E->v, U+1E7F->v, U+1E80->w, U+1E81->w, U+1E82->w, U+1E83->w,U+1E84->w, U+1E85->w, U+1E86->w, U+1E87->w, U+1E88->w, U+1E89->w,U+1E8A->x, U+1E8B->x, U+1E8C->x, U+1E8D->x, U+1E8E->y, U+1E8F->y,U+1E96->h, U+1E97->t, U+1E98->w, U+1E99->y, U+1EA0->a, U+1EA1->a,U+1EA2->a, U+1EA3->a, U+1EA4->a, U+1EA5->a, U+1EA6->a, U+1EA7->a,U+1EA8->a, U+1EA9->a, U+1EAA->a, U+1EAB->a, U+1EAC->a, U+1EAD->a,U+1EAE->a, U+1EAF->a, U+1EB0->a, U+1EB1->a, U+1EB2->a, U+1EB3->a,U+1EB4->a, U+1EB5->a, U+1EB6->a, U+1EB7->a, U+1EB8->e, U+1EB9->e,U+1EBA->e, U+1EBB->e, U+1EBC->e, U+1EBD->e, U+1EBE->e, U+1EBF->e,U+1EC0->e, U+1EC1->e, U+1EC2->e, U+1EC3->e, U+1EC4->e, U+1EC5->e,U+1EC6->e, U+1EC7->e, U+1EC8->i, U+1EC9->i, U+1ECA->i, U+1ECB->i,U+1ECC->o, U+1ECD->o, U+1ECE->o, U+1ECF->o, U+1ED0->o, U+1ED1->o,U+1ED2->o, U+1ED3->o, U+1ED4->o, U+1ED5->o, U+1ED6->o, U+1ED7->o,U+1ED8->o, U+1ED9->o, U+1EDA->o, U+1EDB->o, U+1EDC->o, U+1EDD->o,U+1EDE->o, U+1EDF->o, U+1EE0->o, U+1EE1->o, U+1EE2->o, U+1EE3->o,U+1EE4->u, U+1EE5->u, U+1EE6->u, U+1EE7->u, U+1EE8->u, U+1EE9->u,U+1EEA->u, U+1EEB->u, U+1EEC->u, U+1EED->u, U+1EEE->u, U+1EEF->u,U+1EF0->u, U+1EF1->u, U+1EF2->y, U+1EF3->y, U+1EF4->y, U+1EF5->y,U+1EF6->y, U+1EF7->y, U+1EF8->y, U+1EF9->y
  ignore_chars = U+AD
  min_prefix_len = 2
  enable_star = 1
  source = director_core_0
}

source product_be_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = root
  sql_db = plush_staging
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `products`.`products_id` * 6 + 3 AS `products_id`, GROUP_CONCAT(DISTINCT products_description.`products_name` SEPARATOR ' ') AS `descriptions_title`, name_fr AS `serie_title_fr`, name_nl AS `serie_title_nl`, name_en AS `serie_title_en`, `products`.`products_id` AS `sphinx_internal_id`, 'Product' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, CRC32(products_type) AS `kind`, `products`.`products_countries_id` AS `country_id`, UNIX_TIMESTAMP(`products`.`products_date_available`) AS `available_at`, UNIX_TIMESTAMP(`products`.`products_date_added`) AS `created_at`, `products`.`products_id` AS `product_id`, CAST(vod_next AS SIGNED) AS `vod_next`, CAST(vod_next_lux AS SIGNED) AS `vod_next_lux`, CAST(vod_next_nl AS SIGNED) AS `vod_next_nl`, `products`.`products_public` AS `audience`, `products`.`products_year` AS `year`, `products`.`products_rating` AS `dvdpost_rating`, `products`.`imdb_id` AS `imdb_id`, `products`.`package_id` AS `package_id`, case when  products_status = -1 then 99 else products_status end AS `state`, GROUP_CONCAT(DISTINCT actors.`actors_id` SEPARATOR ',') AS `actors_id`, GROUP_CONCAT(DISTINCT categories.categories_id SEPARATOR ',') AS `category_id`, directors.`directors_id` AS `director_id`, studio.`studio_id` AS `studio_id`, `products`.`serie_id` AS `serie_id`, `products`.`season_id` AS `season_id`, `products`.`episode_id` AS `episode_id`, `products`.`rating_count` AS `rating_count`, cast((cast((rating_users/rating_count)*2 AS SIGNED)/2) as decimal(2,1)) AS `rating`, GROUP_CONCAT(DISTINCT streaming_products.`imdb_id` SEPARATOR ',') AS `streaming_imdb_id`, GROUP_CONCAT(DISTINCT streaming_products.`language_id` SEPARATOR ',') AS `language_ids`, GROUP_CONCAT(DISTINCT streaming_products.`subtitle_id` SEPARATOR ',') AS `subtitle_ids`, (select if( date(now()) <= date(min(expire_at)) ,replace(min(available_from),'-',''), if(date(now()) <= date(max(expire_at)), replace(max(available_from),'-',''),replace(min(available_backcatalogue_from),'-','')))  from streaming_products   where status = 'online_test_ok' and available = 1  and imdb_id = products.imdb_id and   (date(now())  > expire_at or date(now()) <= date(expire_at) or expire_at is null) order by available_from asc, available_backcatalogue_from asc limit 1) AS `streaming_available_at_order`, UNIX_TIMESTAMP(if(vod_online_bes_products.expire_at >= date(now()) and vod_online_bes_products.expire_at != vod_online_bes_products.available_backcatalogue_from,vod_online_bes_products.expire_at,vod_online_bes_products.expire_backcatalogue_at)) AS `streaming_expire_at`, GROUP_CONCAT(DISTINCT vod_online_bes_products.`imdb_id` SEPARATOR ',') AS `imdb_id_online`, GROUP_CONCAT(DISTINCT vod_online_bes_products.`language_id` SEPARATOR ',') AS `online_language_ids`, GROUP_CONCAT(DISTINCT vod_online_bes_products.`subtitle_id` SEPARATOR ',') AS `online_subtitle_ids`, find_in_set("1", cast(belgium_ids as char)) > 0 AS `belgium_country`, find_in_set("2", cast(belgium_ids as char)) > 0 AS `belgium_actor`, find_in_set("3", cast(belgium_ids as char)) > 0 AS `belgium_director`, find_in_set("4", cast(belgium_ids as char)) > 0 AS `belgium_land`, (select count(*) c from tokens where tokens.imdb_id = products.imdb_id and (datediff(now(),created_at) < 40)) AS `count_tokens`, UNIX_TIMESTAMP((select if(min(available_backcatalogue_from) < now() and (min(expire_backcatalogue_at)) > now() and (min(available_backcatalogue_from)) > (start_on),min(available_backcatalogue_from),start_on) start_on from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on >= date(now()) or end_on >= date(now())) join streaming_products sp on sp.imdb_id = p.imdb_id where p.imdb_id = products.imdb_id group by p.imdb_id order by sd.start_on limit 1)) AS `svod_start`, UNIX_TIMESTAMP((select if(min(expire_at) > now() and min(expire_at) < end_on,min(expire_at),if(min(expire_backcatalogue_at) > now() and min(expire_backcatalogue_at) < end_on,min(expire_backcatalogue_at),(end_on))) from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on >= date(now()) or end_on >= date(now())) join streaming_products sp on sp.imdb_id = p.imdb_id where p.imdb_id =products.imdb_id order by sd.start_on limit 1)) AS `svod_end`, UNIX_TIMESTAMP((select ifnull(end_on,ifnull((select end_on from svod_dates where imdb_id=products.imdb_id and svod_dates.start_on < date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()),min(available_from),min(available_backcatalogue_from)))) svod_start from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('uploaded','soon','online_test_ok') and country ='BE' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `tvod_start`, UNIX_TIMESTAMP((select if(end_on,null,ifnull((select start_on from svod_dates where imdb_id= products.imdb_id and svod_dates.start_on > date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()) and (DATEDIFF(available_backcatalogue_from,expire_at) > 6 or expire_backcatalogue_at is null) ,min(expire_at),min(expire_backcatalogue_at)))) svod_end from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('uploaded','soon','online_test_ok') and country ='BE' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id group by sp.id order by sd.start_on,svod_end desc limit 1)) AS `tvod_end`, concat(GROUP_CONCAT(DISTINCT IFNULL(`vod_online_bes_products`.`language_id`, '0') SEPARATOR ','),',', GROUP_CONCAT(DISTINCT IFNULL(`vod_online_bes_products`.`subtitle_id`, '0') SEPARATOR ',')) AS `audio_sub`, (select studio_id from streaming_products where imdb_id = products.imdb_id and status = 'online_test_ok' and available = 1 order by expire_backcatalogue_at asc limit 1) AS `streaming_studio_id`, (select if(count(*)>0,1,0) from streaming_products where quality in ('1080p', '720p') and imdb_id = products.imdb_id and status in ('uploaded','soon','online_test_ok') and country ='BE' and available = 1) AS `hd`, (select products_name AS products_name_ord from products_description pd where  language_id = 1 and pd.products_id = products.products_id) AS `descriptions_title_fr`, (select products_name AS products_name_ord from products_description pd where  language_id = 2 and pd.products_id = products.products_id) AS `descriptions_title_nl`, (select products_name AS products_name_ord from products_description pd where  language_id = 3 and pd.products_id = products.products_id) AS `descriptions_title_en` FROM `products` LEFT OUTER JOIN `products_description` ON `products_description`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `series` ON `series`.`series_id` = `products`.`serie_id` LEFT OUTER JOIN `products_to_actors` ON `products_to_actors`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `actors` ON `actors`.`actors_id` = `products_to_actors`.`actors_id` LEFT OUTER JOIN `products_to_categories` ON `products_to_categories`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `categories` ON `categories`.`categories_id` = `products_to_categories`.`categories_id` LEFT OUTER JOIN `directors` ON `directors`.`directors_id` = `products`.`products_directors_id` LEFT OUTER JOIN `studio` ON `studio`.`studio_id` = `products`.`products_studio` LEFT OUTER JOIN `streaming_products` ON `streaming_products`.`imdb_id` = `products`.`imdb_id` AND `streaming_products`.`season_id` = `products`.`season_id` AND `streaming_products`.`episode_id` = `products`.`episode_id` AND streaming_products.available = 1 and streaming_products.country ='BE' and streaming_products.status in ('online_test_ok', 'soon', 'uploaded') and (streaming_products.expire_backcatalogue_at is null or streaming_products.expire_backcatalogue_at >= date(now())) LEFT OUTER JOIN `streaming_products` `vod_online_bes_products` ON `vo\
d_online_bes_products`.`imdb_id` = `products`.`imdb_id` AND `vod_online_bes_products`.`season_id` = `products`.`season_id` AND `vod_online_bes_products`.`episode_id` = `products`.`episode_id` AND streaming_products.available = 1 and streaming_products.country ='BE' and streaming_products.status = 'online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) WHERE (`products`.`products_id` BETWEEN $start AND $end) GROUP BY `products`.`products_id`, `products`.`products_id`, `products`.`products_countries_id`, `products`.`products_date_available`, `products`.`products_date_added`, `products`.`products_id`, `products`.`products_public`, `products`.`products_year`, `products`.`products_rating`, `products`.`imdb_id`, `products`.`package_id`, directors.`directors_id`, studio.`studio_id`, `products`.`serie_id`, `products`.`season_id`, `products`.`episode_id`, `products`.`rating_count` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`products`.`products_id`), 1), IFNULL(MAX(`products`.`products_id`), 1) FROM `products` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = kind
  sql_attr_uint = country_id
  sql_attr_uint = product_id
  sql_attr_uint = vod_next
  sql_attr_uint = vod_next_lux
  sql_attr_uint = vod_next_nl
  sql_attr_uint = audience
  sql_attr_uint = year
  sql_attr_uint = dvdpost_rating
  sql_attr_uint = imdb_id
  sql_attr_uint = package_id
  sql_attr_uint = state
  sql_attr_uint = director_id
  sql_attr_uint = studio_id
  sql_attr_uint = serie_id
  sql_attr_uint = season_id
  sql_attr_uint = episode_id
  sql_attr_uint = rating_count
  sql_attr_uint = streaming_available_at_order
  sql_attr_uint = belgium_country
  sql_attr_uint = belgium_actor
  sql_attr_uint = belgium_director
  sql_attr_uint = belgium_land
  sql_attr_uint = count_tokens
  sql_attr_uint = streaming_studio_id
  sql_attr_uint = hd
  sql_attr_timestamp = available_at
  sql_attr_timestamp = created_at
  sql_attr_timestamp = streaming_expire_at
  sql_attr_timestamp = svod_start
  sql_attr_timestamp = svod_end
  sql_attr_timestamp = tvod_start
  sql_attr_timestamp = tvod_end
  sql_attr_float = rating
  sql_attr_multi = uint actors_id from field
  sql_attr_multi = uint category_id from field
  sql_attr_multi = uint streaming_imdb_id from field
  sql_attr_multi = uint language_ids from field
  sql_attr_multi = uint subtitle_ids from field
  sql_attr_multi = uint imdb_id_online from field
  sql_attr_multi = uint online_language_ids from field
  sql_attr_multi = uint online_subtitle_ids from field
  sql_attr_multi = uint audio_sub from field
  sql_attr_string = sphinx_internal_class
  sql_attr_string = descriptions_title_fr
  sql_attr_string = descriptions_title_nl
  sql_attr_string = descriptions_title_en
  sql_query_info = SELECT `products`.* FROM `products`  WHERE (`products`.`products_id` = ($id - 3) / 6)
}

index product_be_core
{
  type = plain
  path = /home/popac/PROJECTS/DVDPost/moovies/db/sphinx/development/product_be_core
  docinfo = extern
  morphology = stem_en, libstemmer_fr
  charset_type = utf-8
  charset_table = 0..9, a..z, _, A..Z->a..z, U+00C0->a, U+00C1->a,U+00C2->a, U+00C3->a, U+00C4->a, U+00C5->a, U+00C7->c, U+00C8->e,U+00C9->e, U+00CA->e, U+00CB->e, U+00CC->i, U+00CD->i, U+00CE->i,U+00CF->i, U+00D1->n, U+00D2->o, U+00D3->o, U+00D4->o, U+00D5->o,U+00D6->o, U+00D8->o, U+00D9->u, U+00DA->u, U+00DB->u, U+00DC->u,U+00DD->y, U+00E0->a, U+00E1->a, U+00E2->a, U+00E3->a, U+00E4->a,U+00E5->a, U+00E7->c, U+00E8->e, U+00E9->e, U+00EA->e, U+00EB->e,U+00EC->i, U+00ED->i, U+00EE->i, U+00EF->i, U+00F1->n, U+00F2->o,U+00F3->o, U+00F4->o, U+00F5->o, U+00F6->o, U+00F8->o, U+00F9->u,U+00FA->u, U+00FB->u, U+00FC->u, U+00FD->y, U+00FF->y, U+0100->a,U+0101->a, U+0102->a, U+0103->a, U+0104->a, U+0105->a, U+0106->c,U+0107->c, U+0108->c, U+0109->c, U+010A->c, U+010B->c, U+010C->c,U+010D->c, U+010E->d, U+010F->d, U+0112->e, U+0113->e, U+0114->e,U+0115->e, U+0116->e, U+0117->e, U+0118->e, U+0119->e, U+011A->e,U+011B->e, U+011C->g, U+011D->g, U+011E->g, U+011F->g, U+0120->g,U+0121->g, U+0122->g, U+0123->g, U+0124->h, U+0125->h, U+0128->i,U+0129->i, U+0131->i, U+012A->i, U+012B->i, U+012C->i, U+012D->i,U+012E->i, U+012F->i, U+0130->i, U+0134->j, U+0135->j, U+0136->k,U+0137->k, U+0139->l, U+013A->l, U+013B->l, U+013C->l, U+013D->l,U+013E->l, U+0142->l, U+0143->n, U+0144->n, U+0145->n, U+0146->n,U+0147->n, U+0148->n, U+014C->o, U+014D->o, U+014E->o, U+014F->o,U+0150->o, U+0151->o, U+0154->r, U+0155->r, U+0156->r, U+0157->r,U+0158->r, U+0159->r, U+015A->s, U+015B->s, U+015C->s, U+015D->s,U+015E->s, U+015F->s, U+0160->s, U+0161->s, U+0162->t, U+0163->t,U+0164->t, U+0165->t, U+0168->u, U+0169->u, U+016A->u, U+016B->u,U+016C->u, U+016D->u, U+016E->u, U+016F->u, U+0170->u, U+0171->u,U+0172->u, U+0173->u, U+0174->w, U+0175->w, U+0176->y, U+0177->y,U+0178->y, U+0179->z, U+017A->z, U+017B->z, U+017C->z, U+017D->z,U+017E->z, U+01A0->o, U+01A1->o, U+01AF->u, U+01B0->u, U+01CD->a,U+01CE->a, U+01CF->i, U+01D0->i, U+01D1->o, U+01D2->o, U+01D3->u,U+01D4->u, U+01D5->u, U+01D6->u, U+01D7->u, U+01D8->u, U+01D9->u,U+01DA->u, U+01DB->u, U+01DC->u, U+01DE->a, U+01DF->a, U+01E0->a,U+01E1->a, U+01E6->g, U+01E7->g, U+01E8->k, U+01E9->k, U+01EA->o,U+01EB->o, U+01EC->o, U+01ED->o, U+01F0->j, U+01F4->g, U+01F5->g,U+01F8->n, U+01F9->n, U+01FA->a, U+01FB->a, U+0200->a, U+0201->a,U+0202->a, U+0203->a, U+0204->e, U+0205->e, U+0206->e, U+0207->e,U+0208->i, U+0209->i, U+020A->i, U+020B->i, U+020C->o, U+020D->o,U+020E->o, U+020F->o, U+0210->r, U+0211->r, U+0212->r, U+0213->r,U+0214->u, U+0215->u, U+0216->u, U+0217->u, U+0218->s, U+0219->s,U+021A->t, U+021B->t, U+021E->h, U+021F->h, U+0226->a, U+0227->a,U+0228->e, U+0229->e, U+022A->o, U+022B->o, U+022C->o, U+022D->o,U+022E->o, U+022F->o, U+0230->o, U+0231->o, U+0232->y, U+0233->y,U+1E00->a, U+1E01->a, U+1E02->b, U+1E03->b, U+1E04->b, U+1E05->b,U+1E06->b, U+1E07->b, U+1E08->c, U+1E09->c, U+1E0A->d, U+1E0B->d,U+1E0C->d, U+1E0D->d, U+1E0E->d, U+1E0F->d, U+1E10->d, U+1E11->d,U+1E12->d, U+1E13->d, U+1E14->e, U+1E15->e, U+1E16->e, U+1E17->e,U+1E18->e, U+1E19->e, U+1E1A->e, U+1E1B->e, U+1E1C->e, U+1E1D->e,U+1E1E->f, U+1E1F->f, U+1E20->g, U+1E21->g, U+1E22->h, U+1E23->h,U+1E24->h, U+1E25->h, U+1E26->h, U+1E27->h, U+1E28->h, U+1E29->h,U+1E2A->h, U+1E2B->h, U+1E2C->i, U+1E2D->i, U+1E2E->i, U+1E2F->i,U+1E30->k, U+1E31->k, U+1E32->k, U+1E33->k, U+1E34->k, U+1E35->k,U+1E36->l, U+1E37->l, U+1E38->l, U+1E39->l, U+1E3A->l, U+1E3B->l,U+1E3C->l, U+1E3D->l, U+1E3E->m, U+1E3F->m, U+1E40->m, U+1E41->m,U+1E42->m, U+1E43->m, U+1E44->n, U+1E45->n, U+1E46->n, U+1E47->n,U+1E48->n, U+1E49->n, U+1E4A->n, U+1E4B->n, U+1E4C->o, U+1E4D->o,U+1E4E->o, U+1E4F->o, U+1E50->o, U+1E51->o, U+1E52->o, U+1E53->o,U+1E54->p, U+1E55->p, U+1E56->p, U+1E57->p, U+1E58->r, U+1E59->r,U+1E5A->r, U+1E5B->r, U+1E5C->r, U+1E5D->r, U+1E5E->r, U+1E5F->r,U+1E60->s, U+1E61->s, U+1E62->s, U+1E63->s, U+1E64->s, U+1E65->s,U+1E66->s, U+1E67->s, U+1E68->s, U+1E69->s, U+1E6A->t, U+1E6B->t,U+1E6C->t, U+1E6D->t, U+1E6E->t, U+1E6F->t, U+1E70->t, U+1E71->t,U+1E72->u, U+1E73->u, U+1E74->u, U+1E75->u, U+1E76->u, U+1E77->u,U+1E78->u, U+1E79->u, U+1E7A->u, U+1E7B->u, U+1E7C->v, U+1E7D->v,U+1E7E->v, U+1E7F->v, U+1E80->w, U+1E81->w, U+1E82->w, U+1E83->w,U+1E84->w, U+1E85->w, U+1E86->w, U+1E87->w, U+1E88->w, U+1E89->w,U+1E8A->x, U+1E8B->x, U+1E8C->x, U+1E8D->x, U+1E8E->y, U+1E8F->y,U+1E96->h, U+1E97->t, U+1E98->w, U+1E99->y, U+1EA0->a, U+1EA1->a,U+1EA2->a, U+1EA3->a, U+1EA4->a, U+1EA5->a, U+1EA6->a, U+1EA7->a,U+1EA8->a, U+1EA9->a, U+1EAA->a, U+1EAB->a, U+1EAC->a, U+1EAD->a,U+1EAE->a, U+1EAF->a, U+1EB0->a, U+1EB1->a, U+1EB2->a, U+1EB3->a,U+1EB4->a, U+1EB5->a, U+1EB6->a, U+1EB7->a, U+1EB8->e, U+1EB9->e,U+1EBA->e, U+1EBB->e, U+1EBC->e, U+1EBD->e, U+1EBE->e, U+1EBF->e,U+1EC0->e, U+1EC1->e, U+1EC2->e, U+1EC3->e, U+1EC4->e, U+1EC5->e,U+1EC6->e, U+1EC7->e, U+1EC8->i, U+1EC9->i, U+1ECA->i, U+1ECB->i,U+1ECC->o, U+1ECD->o, U+1ECE->o, U+1ECF->o, U+1ED0->o, U+1ED1->o,U+1ED2->o, U+1ED3->o, U+1ED4->o, U+1ED5->o, U+1ED6->o, U+1ED7->o,U+1ED8->o, U+1ED9->o, U+1EDA->o, U+1EDB->o, U+1EDC->o, U+1EDD->o,U+1EDE->o, U+1EDF->o, U+1EE0->o, U+1EE1->o, U+1EE2->o, U+1EE3->o,U+1EE4->u, U+1EE5->u, U+1EE6->u, U+1EE7->u, U+1EE8->u, U+1EE9->u,U+1EEA->u, U+1EEB->u, U+1EEC->u, U+1EED->u, U+1EEE->u, U+1EEF->u,U+1EF0->u, U+1EF1->u, U+1EF2->y, U+1EF3->y, U+1EF4->y, U+1EF5->y,U+1EF6->y, U+1EF7->y, U+1EF8->y, U+1EF9->y
  ignore_chars = U+AD
  min_prefix_len = 3
  enable_star = 1
  source = product_be_core_0
}

source product_lu_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = root
  sql_db = plush_staging
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `products`.`products_id` * 6 + 3 AS `products_id`, GROUP_CONCAT(DISTINCT products_description.`products_name` SEPARATOR ' ') AS `descriptions_title`, `products`.`products_id` AS `sphinx_internal_id`, 'Product' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, CRC32(products_type) AS `kind`, `products`.`products_countries_id` AS `country_id`, UNIX_TIMESTAMP(`products`.`products_date_available`) AS `available_at`, UNIX_TIMESTAMP(`products`.`products_date_added`) AS `created_at`, `products`.`products_id` AS `product_id`, CAST(vod_next AS SIGNED) AS `vod_next`, CAST(vod_next_lux AS SIGNED) AS `vod_next_lux`, CAST(vod_next_nl AS SIGNED) AS `vod_next_nl`, `products`.`products_public` AS `audience`, `products`.`products_year` AS `year`, `products`.`products_rating` AS `dvdpost_rating`, `products`.`imdb_id` AS `imdb_id`, `products`.`package_id` AS `package_id`, case when  products_status = -1 then 99 else products_status end AS `state`, GROUP_CONCAT(DISTINCT actors.`actors_id` SEPARATOR ',') AS `actors_id`, GROUP_CONCAT(DISTINCT categories.categories_id SEPARATOR ',') AS `category_id`, directors.`directors_id` AS `director_id`, studio.`studio_id` AS `studio_id`, `products`.`serie_id` AS `serie_id`, `products`.`season_id` AS `season_id`, `products`.`episode_id` AS `episode_id`, `products`.`rating_count` AS `rating_count`, cast((cast((rating_users/rating_count)*2 AS SIGNED)/2) as decimal(2,1)) AS `rating`, GROUP_CONCAT(DISTINCT streaming_products.`imdb_id` SEPARATOR ',') AS `streaming_imdb_id`, GROUP_CONCAT(DISTINCT streaming_products.`language_id` SEPARATOR ',') AS `language_ids`, GROUP_CONCAT(DISTINCT streaming_products.`subtitle_id` SEPARATOR ',') AS `subtitle_ids`, (select if( date(now()) <= date(min(expire_at)) ,replace(min(available_from),'-',''), if(date(now()) <= date(max(expire_at)), replace(max(available_from),'-',''),replace(min(available_backcatalogue_from),'-','')))  from streaming_products   where status = 'online_test_ok' and available = 1  and imdb_id = products.imdb_id and   (date(now())  > expire_at or date(now()) <= date(expire_at) or expire_at is null) order by available_from asc, available_backcatalogue_from asc limit 1) AS `streaming_available_at_order`, UNIX_TIMESTAMP(if(vod_online_lus_products.expire_at >= date(now()),vod_online_lus_products.expire_at,vod_online_lus_products.expire_backcatalogue_at)) AS `streaming_expire_at`, GROUP_CONCAT(DISTINCT vod_online_lus_products.`imdb_id` SEPARATOR ',') AS `imdb_id_online`, GROUP_CONCAT(DISTINCT vod_online_lus_products.`language_id` SEPARATOR ',') AS `online_language_ids`, GROUP_CONCAT(DISTINCT vod_online_lus_products.`subtitle_id` SEPARATOR ',') AS `online_subtitle_ids`, find_in_set("1", cast(belgium_ids as char)) > 0 AS `belgium_country`, find_in_set("2", cast(belgium_ids as char)) > 0 AS `belgium_actor`, find_in_set("3", cast(belgium_ids as char)) > 0 AS `belgium_director`, find_in_set("4", cast(belgium_ids as char)) > 0 AS `belgium_land`, (select count(*) c from tokens where tokens.imdb_id = products.imdb_id and (datediff(now(),created_at) < 40)) AS `count_tokens`, UNIX_TIMESTAMP((select start_on svod_start from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on >= date(now()) or end_on >= date(now())) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `svod_start`, UNIX_TIMESTAMP((select end_on svod_end from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on >= date(now()) or end_on >= date(now()))  where p.imdb_id =products.imdb_id order by sd.start_on limit 1)) AS `svod_end`, UNIX_TIMESTAMP((select ifnull(end_on,ifnull((select end_on from svod_dates where imdb_id=products.imdb_id and svod_dates.start_on < date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()),min(available_from),min(available_backcatalogue_from)))) svod_start from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('uploaded','soon','online_test_ok') and country ='LU' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `tvod_start`, UNIX_TIMESTAMP((select if(end_on,null,ifnull((select start_on from svod_dates where imdb_id= products.imdb_id and svod_dates.start_on > date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()) and (DATEDIFF(available_backcatalogue_from,expire_at) > 6 or expire_backcatalogue_at is null) ,min(expire_at),min(expire_backcatalogue_at)))) svod_end from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('uploaded','soon','online_test_ok') and country ='BE' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id group by sp.id order by sd.start_on,svod_end desc limit 1)) AS `tvod_end`, concat(GROUP_CONCAT(DISTINCT IFNULL(`vod_online_lus_products`.`language_id`, '0') SEPARATOR ','),',', GROUP_CONCAT(DISTINCT IFNULL(`vod_online_lus_products`.`subtitle_id`, '0') SEPARATOR ',')) AS `audio_sub`, (select studio_id from streaming_products where imdb_id = products.imdb_id and status = 'online_test_ok' and available = 1 order by expire_backcatalogue_at asc limit 1) AS `streaming_studio_id`, (select if(count(*)>0,1,0) from streaming_products where quality in ('1080p', '720p') and imdb_id = products.imdb_id and status in ('uploaded','soon','online_test_ok') and country ='LU' and available = 1) AS `hd`, (select products_name AS products_name_ord from products_description pd where  language_id = 1 and pd.products_id = products.products_id) AS `descriptions_title_fr`, (select products_name AS products_name_ord from products_description pd where  language_id = 2 and pd.products_id = products.products_id) AS `descriptions_title_nl`, (select products_name AS products_name_ord from products_description pd where  language_id = 3 and pd.products_id = products.products_id) AS `descriptions_title_en` FROM `products` LEFT OUTER JOIN `products_description` ON `products_description`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `products_to_actors` ON `products_to_actors`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `actors` ON `actors`.`actors_id` = `products_to_actors`.`actors_id` LEFT OUTER JOIN `products_to_categories` ON `products_to_categories`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `categories` ON `categories`.`categories_id` = `products_to_categories`.`categories_id` LEFT OUTER JOIN `directors` ON `directors`.`directors_id` = `products`.`products_directors_id` LEFT OUTER JOIN `studio` ON `studio`.`studio_id` = `products`.`products_studio` LEFT OUTER JOIN `streaming_products` ON `streaming_products`.`imdb_id` = `products`.`imdb_id` AND `streaming_products`.`season_id` = `products`.`season_id` AND `streaming_products`.`episode_id` = `products`.`episode_id` AND streaming_products.available = 1 and streaming_products.country ='LU' and streaming_products.status in ('online_test_ok', 'soon', 'uploaded') and (streaming_products.expire_backcatalogue_at is null or streaming_products.expire_backcatalogue_at >= date(now())) LEFT OUTER JOIN `streaming_products` `vod_online_lus_products` ON `vod_online_lus_products`.`imdb_id` = `products`.`imdb_id` AND `vod_online_lus_products`.`season_id` = `products`.`season_id` AND `vod_online_lus_products`.`episode_id` = `products`.`episode_id` AND streaming_products.available = 1 and streaming_products.country ='lu' and streaming_products.status = 'online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) WHERE (`products`.`products_id` BETWEEN $start AND $end) GROUP BY `products`.`products_id`, `products`.`products_id`, `products`.`products_countries_id`, `products`.`products_da\
te_available`, `products`.`products_date_added`, `products`.`products_id`, `products`.`products_public`, `products`.`products_year`, `products`.`products_rating`, `products`.`imdb_id`, `products`.`package_id`, directors.`directors_id`, studio.`studio_id`, `products`.`serie_id`, `products`.`season_id`, `products`.`episode_id`, `products`.`rating_count` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`products`.`products_id`), 1), IFNULL(MAX(`products`.`products_id`), 1) FROM `products` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = kind
  sql_attr_uint = country_id
  sql_attr_uint = product_id
  sql_attr_uint = vod_next
  sql_attr_uint = vod_next_lux
  sql_attr_uint = vod_next_nl
  sql_attr_uint = audience
  sql_attr_uint = year
  sql_attr_uint = dvdpost_rating
  sql_attr_uint = imdb_id
  sql_attr_uint = package_id
  sql_attr_uint = state
  sql_attr_uint = director_id
  sql_attr_uint = studio_id
  sql_attr_uint = serie_id
  sql_attr_uint = season_id
  sql_attr_uint = episode_id
  sql_attr_uint = rating_count
  sql_attr_uint = streaming_available_at_order
  sql_attr_uint = belgium_country
  sql_attr_uint = belgium_actor
  sql_attr_uint = belgium_director
  sql_attr_uint = belgium_land
  sql_attr_uint = count_tokens
  sql_attr_uint = streaming_studio_id
  sql_attr_uint = hd
  sql_attr_timestamp = available_at
  sql_attr_timestamp = created_at
  sql_attr_timestamp = streaming_expire_at
  sql_attr_timestamp = svod_start
  sql_attr_timestamp = svod_end
  sql_attr_timestamp = tvod_start
  sql_attr_timestamp = tvod_end
  sql_attr_float = rating
  sql_attr_multi = uint actors_id from field
  sql_attr_multi = uint category_id from field
  sql_attr_multi = uint streaming_imdb_id from field
  sql_attr_multi = uint language_ids from field
  sql_attr_multi = uint subtitle_ids from field
  sql_attr_multi = uint imdb_id_online from field
  sql_attr_multi = uint online_language_ids from field
  sql_attr_multi = uint online_subtitle_ids from field
  sql_attr_multi = uint audio_sub from field
  sql_attr_string = sphinx_internal_class
  sql_attr_string = descriptions_title_fr
  sql_attr_string = descriptions_title_nl
  sql_attr_string = descriptions_title_en
  sql_query_info = SELECT `products`.* FROM `products`  WHERE (`products`.`products_id` = ($id - 3) / 6)
}

index product_lu_core
{
  type = plain
  path = /home/popac/PROJECTS/DVDPost/moovies/db/sphinx/development/product_lu_core
  docinfo = extern
  morphology = stem_en, libstemmer_fr
  charset_type = utf-8
  charset_table = 0..9, a..z, _, A..Z->a..z, U+00C0->a, U+00C1->a,U+00C2->a, U+00C3->a, U+00C4->a, U+00C5->a, U+00C7->c, U+00C8->e,U+00C9->e, U+00CA->e, U+00CB->e, U+00CC->i, U+00CD->i, U+00CE->i,U+00CF->i, U+00D1->n, U+00D2->o, U+00D3->o, U+00D4->o, U+00D5->o,U+00D6->o, U+00D8->o, U+00D9->u, U+00DA->u, U+00DB->u, U+00DC->u,U+00DD->y, U+00E0->a, U+00E1->a, U+00E2->a, U+00E3->a, U+00E4->a,U+00E5->a, U+00E7->c, U+00E8->e, U+00E9->e, U+00EA->e, U+00EB->e,U+00EC->i, U+00ED->i, U+00EE->i, U+00EF->i, U+00F1->n, U+00F2->o,U+00F3->o, U+00F4->o, U+00F5->o, U+00F6->o, U+00F8->o, U+00F9->u,U+00FA->u, U+00FB->u, U+00FC->u, U+00FD->y, U+00FF->y, U+0100->a,U+0101->a, U+0102->a, U+0103->a, U+0104->a, U+0105->a, U+0106->c,U+0107->c, U+0108->c, U+0109->c, U+010A->c, U+010B->c, U+010C->c,U+010D->c, U+010E->d, U+010F->d, U+0112->e, U+0113->e, U+0114->e,U+0115->e, U+0116->e, U+0117->e, U+0118->e, U+0119->e, U+011A->e,U+011B->e, U+011C->g, U+011D->g, U+011E->g, U+011F->g, U+0120->g,U+0121->g, U+0122->g, U+0123->g, U+0124->h, U+0125->h, U+0128->i,U+0129->i, U+0131->i, U+012A->i, U+012B->i, U+012C->i, U+012D->i,U+012E->i, U+012F->i, U+0130->i, U+0134->j, U+0135->j, U+0136->k,U+0137->k, U+0139->l, U+013A->l, U+013B->l, U+013C->l, U+013D->l,U+013E->l, U+0142->l, U+0143->n, U+0144->n, U+0145->n, U+0146->n,U+0147->n, U+0148->n, U+014C->o, U+014D->o, U+014E->o, U+014F->o,U+0150->o, U+0151->o, U+0154->r, U+0155->r, U+0156->r, U+0157->r,U+0158->r, U+0159->r, U+015A->s, U+015B->s, U+015C->s, U+015D->s,U+015E->s, U+015F->s, U+0160->s, U+0161->s, U+0162->t, U+0163->t,U+0164->t, U+0165->t, U+0168->u, U+0169->u, U+016A->u, U+016B->u,U+016C->u, U+016D->u, U+016E->u, U+016F->u, U+0170->u, U+0171->u,U+0172->u, U+0173->u, U+0174->w, U+0175->w, U+0176->y, U+0177->y,U+0178->y, U+0179->z, U+017A->z, U+017B->z, U+017C->z, U+017D->z,U+017E->z, U+01A0->o, U+01A1->o, U+01AF->u, U+01B0->u, U+01CD->a,U+01CE->a, U+01CF->i, U+01D0->i, U+01D1->o, U+01D2->o, U+01D3->u,U+01D4->u, U+01D5->u, U+01D6->u, U+01D7->u, U+01D8->u, U+01D9->u,U+01DA->u, U+01DB->u, U+01DC->u, U+01DE->a, U+01DF->a, U+01E0->a,U+01E1->a, U+01E6->g, U+01E7->g, U+01E8->k, U+01E9->k, U+01EA->o,U+01EB->o, U+01EC->o, U+01ED->o, U+01F0->j, U+01F4->g, U+01F5->g,U+01F8->n, U+01F9->n, U+01FA->a, U+01FB->a, U+0200->a, U+0201->a,U+0202->a, U+0203->a, U+0204->e, U+0205->e, U+0206->e, U+0207->e,U+0208->i, U+0209->i, U+020A->i, U+020B->i, U+020C->o, U+020D->o,U+020E->o, U+020F->o, U+0210->r, U+0211->r, U+0212->r, U+0213->r,U+0214->u, U+0215->u, U+0216->u, U+0217->u, U+0218->s, U+0219->s,U+021A->t, U+021B->t, U+021E->h, U+021F->h, U+0226->a, U+0227->a,U+0228->e, U+0229->e, U+022A->o, U+022B->o, U+022C->o, U+022D->o,U+022E->o, U+022F->o, U+0230->o, U+0231->o, U+0232->y, U+0233->y,U+1E00->a, U+1E01->a, U+1E02->b, U+1E03->b, U+1E04->b, U+1E05->b,U+1E06->b, U+1E07->b, U+1E08->c, U+1E09->c, U+1E0A->d, U+1E0B->d,U+1E0C->d, U+1E0D->d, U+1E0E->d, U+1E0F->d, U+1E10->d, U+1E11->d,U+1E12->d, U+1E13->d, U+1E14->e, U+1E15->e, U+1E16->e, U+1E17->e,U+1E18->e, U+1E19->e, U+1E1A->e, U+1E1B->e, U+1E1C->e, U+1E1D->e,U+1E1E->f, U+1E1F->f, U+1E20->g, U+1E21->g, U+1E22->h, U+1E23->h,U+1E24->h, U+1E25->h, U+1E26->h, U+1E27->h, U+1E28->h, U+1E29->h,U+1E2A->h, U+1E2B->h, U+1E2C->i, U+1E2D->i, U+1E2E->i, U+1E2F->i,U+1E30->k, U+1E31->k, U+1E32->k, U+1E33->k, U+1E34->k, U+1E35->k,U+1E36->l, U+1E37->l, U+1E38->l, U+1E39->l, U+1E3A->l, U+1E3B->l,U+1E3C->l, U+1E3D->l, U+1E3E->m, U+1E3F->m, U+1E40->m, U+1E41->m,U+1E42->m, U+1E43->m, U+1E44->n, U+1E45->n, U+1E46->n, U+1E47->n,U+1E48->n, U+1E49->n, U+1E4A->n, U+1E4B->n, U+1E4C->o, U+1E4D->o,U+1E4E->o, U+1E4F->o, U+1E50->o, U+1E51->o, U+1E52->o, U+1E53->o,U+1E54->p, U+1E55->p, U+1E56->p, U+1E57->p, U+1E58->r, U+1E59->r,U+1E5A->r, U+1E5B->r, U+1E5C->r, U+1E5D->r, U+1E5E->r, U+1E5F->r,U+1E60->s, U+1E61->s, U+1E62->s, U+1E63->s, U+1E64->s, U+1E65->s,U+1E66->s, U+1E67->s, U+1E68->s, U+1E69->s, U+1E6A->t, U+1E6B->t,U+1E6C->t, U+1E6D->t, U+1E6E->t, U+1E6F->t, U+1E70->t, U+1E71->t,U+1E72->u, U+1E73->u, U+1E74->u, U+1E75->u, U+1E76->u, U+1E77->u,U+1E78->u, U+1E79->u, U+1E7A->u, U+1E7B->u, U+1E7C->v, U+1E7D->v,U+1E7E->v, U+1E7F->v, U+1E80->w, U+1E81->w, U+1E82->w, U+1E83->w,U+1E84->w, U+1E85->w, U+1E86->w, U+1E87->w, U+1E88->w, U+1E89->w,U+1E8A->x, U+1E8B->x, U+1E8C->x, U+1E8D->x, U+1E8E->y, U+1E8F->y,U+1E96->h, U+1E97->t, U+1E98->w, U+1E99->y, U+1EA0->a, U+1EA1->a,U+1EA2->a, U+1EA3->a, U+1EA4->a, U+1EA5->a, U+1EA6->a, U+1EA7->a,U+1EA8->a, U+1EA9->a, U+1EAA->a, U+1EAB->a, U+1EAC->a, U+1EAD->a,U+1EAE->a, U+1EAF->a, U+1EB0->a, U+1EB1->a, U+1EB2->a, U+1EB3->a,U+1EB4->a, U+1EB5->a, U+1EB6->a, U+1EB7->a, U+1EB8->e, U+1EB9->e,U+1EBA->e, U+1EBB->e, U+1EBC->e, U+1EBD->e, U+1EBE->e, U+1EBF->e,U+1EC0->e, U+1EC1->e, U+1EC2->e, U+1EC3->e, U+1EC4->e, U+1EC5->e,U+1EC6->e, U+1EC7->e, U+1EC8->i, U+1EC9->i, U+1ECA->i, U+1ECB->i,U+1ECC->o, U+1ECD->o, U+1ECE->o, U+1ECF->o, U+1ED0->o, U+1ED1->o,U+1ED2->o, U+1ED3->o, U+1ED4->o, U+1ED5->o, U+1ED6->o, U+1ED7->o,U+1ED8->o, U+1ED9->o, U+1EDA->o, U+1EDB->o, U+1EDC->o, U+1EDD->o,U+1EDE->o, U+1EDF->o, U+1EE0->o, U+1EE1->o, U+1EE2->o, U+1EE3->o,U+1EE4->u, U+1EE5->u, U+1EE6->u, U+1EE7->u, U+1EE8->u, U+1EE9->u,U+1EEA->u, U+1EEB->u, U+1EEC->u, U+1EED->u, U+1EEE->u, U+1EEF->u,U+1EF0->u, U+1EF1->u, U+1EF2->y, U+1EF3->y, U+1EF4->y, U+1EF5->y,U+1EF6->y, U+1EF7->y, U+1EF8->y, U+1EF9->y
  ignore_chars = U+AD
  min_prefix_len = 3
  enable_star = 1
  source = product_lu_core_0
}

source product_nl_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = root
  sql_db = plush_staging
  sql_port = 3306
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `products`.`products_id` * 6 + 3 AS `products_id`, GROUP_CONCAT(DISTINCT products_description.`products_name` SEPARATOR ' ') AS `descriptions_title`, `products`.`products_id` AS `sphinx_internal_id`, 'Product' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, CRC32(products_type) AS `kind`, `products`.`products_countries_id` AS `country_id`, UNIX_TIMESTAMP(`products`.`products_date_available`) AS `available_at`, UNIX_TIMESTAMP(`products`.`products_date_added`) AS `created_at`, `products`.`products_id` AS `product_id`, CAST(vod_next AS SIGNED) AS `vod_next`, CAST(vod_next_lux AS SIGNED) AS `vod_next_lux`, CAST(vod_next_nl AS SIGNED) AS `vod_next_nl`, `products`.`products_public` AS `audience`, `products`.`products_year` AS `year`, `products`.`products_rating` AS `dvdpost_rating`, `products`.`imdb_id` AS `imdb_id`, `products`.`package_id` AS `package_id`, case when  products_status = -1 then 99 else products_status end AS `state`, GROUP_CONCAT(DISTINCT actors.`actors_id` SEPARATOR ',') AS `actors_id`, GROUP_CONCAT(DISTINCT categories.categories_id SEPARATOR ',') AS `category_id`, directors.`directors_id` AS `director_id`, studio.`studio_id` AS `studio_id`, `products`.`serie_id` AS `serie_id`, `products`.`season_id` AS `season_id`, `products`.`episode_id` AS `episode_id`, `products`.`rating_count` AS `rating_count`, cast((cast((rating_users/rating_count)*2 AS SIGNED)/2) as decimal(2,1)) AS `rating`, GROUP_CONCAT(DISTINCT streaming_products.`imdb_id` SEPARATOR ',') AS `streaming_imdb_id`, GROUP_CONCAT(DISTINCT streaming_products.`language_id` SEPARATOR ',') AS `language_ids`, GROUP_CONCAT(DISTINCT streaming_products.`subtitle_id` SEPARATOR ',') AS `subtitle_ids`, (select if( date(now()) <= date(min(expire_at)) ,replace(min(available_from),'-',''), if(date(now()) <= date(max(expire_at)), replace(max(available_from),'-',''),replace(min(available_backcatalogue_from),'-','')))  from streaming_products   where status = 'online_test_ok' and available = 1  and imdb_id = products.imdb_id and   (date(now())  > expire_at or date(now()) <= date(expire_at) or expire_at is null) order by available_from asc, available_backcatalogue_from asc limit 1) AS `streaming_available_at_order`, UNIX_TIMESTAMP(if(vod_online_nls_products.expire_at >= date(now()),vod_online_nls_products.expire_at,vod_online_nls_products.expire_backcatalogue_at)) AS `streaming_expire_at`, GROUP_CONCAT(DISTINCT vod_online_nls_products.`imdb_id` SEPARATOR ',') AS `imdb_id_online`, GROUP_CONCAT(DISTINCT vod_online_nls_products.`language_id` SEPARATOR ',') AS `online_language_ids`, GROUP_CONCAT(DISTINCT vod_online_nls_products.`subtitle_id` SEPARATOR ',') AS `online_subtitle_ids`, find_in_set("1", cast(belgium_ids as char)) > 0 AS `belgium_country`, find_in_set("2", cast(belgium_ids as char)) > 0 AS `belgium_actor`, find_in_set("3", cast(belgium_ids as char)) > 0 AS `belgium_director`, find_in_set("4", cast(belgium_ids as char)) > 0 AS `belgium_land`, (select count(*) c from tokens where tokens.imdb_id = products.imdb_id and (datediff(now(),created_at) < 40)) AS `count_tokens`, UNIX_TIMESTAMP((select start_on svod_start from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on >= date(now()) or end_on >= date(now())) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `svod_start`, UNIX_TIMESTAMP((select end_on svod_end from products p left join svod_dates sd on sd.imdb_id = p.imdb_id and (start_on >= date(now()) or end_on >= date(now()))  where p.imdb_id =products.imdb_id order by sd.start_on limit 1)) AS `svod_end`, UNIX_TIMESTAMP((select ifnull(end_on,ifnull((select end_on from svod_dates where imdb_id=products.imdb_id and svod_dates.start_on < date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()),min(available_from),min(available_backcatalogue_from)))) svod_start from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('uploaded','soon','online_test_ok') and country ='NL' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id order by sd.start_on limit 1)) AS `tvod_start`, UNIX_TIMESTAMP((select if(end_on,null,ifnull((select start_on from svod_dates where imdb_id= products.imdb_id and svod_dates.start_on > date(now()) order by start_on desc limit 1),if(expire_at >= date(now()) and available_from <=date(now()) and (DATEDIFF(available_backcatalogue_from,expire_at) > 6 or expire_backcatalogue_at is null) ,min(expire_at),min(expire_backcatalogue_at)))) svod_end from products p join `streaming_products` sp on p.imdb_id = sp.imdb_id and available =1 and status  in ('uploaded','soon','online_test_ok') and country ='BE' left join svod_dates sd on sd.imdb_id = p.imdb_id and ( start_on <= date(now()) and end_on>= date(now())) where p.imdb_id = products.imdb_id group by sp.id order by sd.start_on,svod_end desc limit 1)) AS `tvod_end`, concat(GROUP_CONCAT(DISTINCT IFNULL(`vod_online_nls_products`.`language_id`, '0') SEPARATOR ','),',', GROUP_CONCAT(DISTINCT IFNULL(`vod_online_nls_products`.`subtitle_id`, '0') SEPARATOR ',')) AS `audio_sub`, (select studio_id from streaming_products where imdb_id = products.imdb_id and status = 'online_test_ok' and available = 1 order by expire_backcatalogue_at asc limit 1) AS `streaming_studio_id`, (select if(count(*)>0,1,0) from streaming_products where quality in ('1080p', '720p') and imdb_id = products.imdb_id and status in ('uploaded','soon','online_test_ok') and country ='LU' and available = 1) AS `hd`, (select products_name AS products_name_ord from products_description pd where  language_id = 1 and pd.products_id = products.products_id) AS `descriptions_title_fr`, (select products_name AS products_name_ord from products_description pd where  language_id = 2 and pd.products_id = products.products_id) AS `descriptions_title_nl`, (select products_name AS products_name_ord from products_description pd where  language_id = 3 and pd.products_id = products.products_id) AS `descriptions_title_en` FROM `products` LEFT OUTER JOIN `products_description` ON `products_description`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `products_to_actors` ON `products_to_actors`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `actors` ON `actors`.`actors_id` = `products_to_actors`.`actors_id` LEFT OUTER JOIN `products_to_categories` ON `products_to_categories`.`products_id` = `products`.`products_id` LEFT OUTER JOIN `categories` ON `categories`.`categories_id` = `products_to_categories`.`categories_id` LEFT OUTER JOIN `directors` ON `directors`.`directors_id` = `products`.`products_directors_id` LEFT OUTER JOIN `studio` ON `studio`.`studio_id` = `products`.`products_studio` LEFT OUTER JOIN `streaming_products` ON `streaming_products`.`imdb_id` = `products`.`imdb_id` AND `streaming_products`.`season_id` = `products`.`season_id` AND `streaming_products`.`episode_id` = `products`.`episode_id` AND streaming_products.available = 1 and streaming_products.country ='NL' and streaming_products.status in ('online_test_ok', 'soon', 'uploaded') and (streaming_products.expire_backcatalogue_at is null or streaming_products.expire_backcatalogue_at >= date(now())) LEFT OUTER JOIN `streaming_products` `vod_online_nls_products` ON `vod_online_nls_products`.`imdb_id` = `products`.`imdb_id` AND `vod_online_nls_products`.`season_id` = `products`.`season_id` AND `vod_online_nls_products`.`episode_id` = `products`.`episode_id` AND streaming_products.available = 1 and streaming_products.country ='NL' and streaming_products.status = 'online_test_ok' and ((streaming_products.available_from <= date(now()) and streaming_products.expire_at >= date(now())) or (streaming_products.available_backcatalogue_from <= date(now()) and streaming_products.expire_backcatalogue_at >= date(now()))) WHERE (`products`.`products_id` BETWEEN $start AND $end) GROUP BY `products`.`products_id`, `products`.`products_id`, `products`.`products_countries_id`, `products`.`products_da\
te_available`, `products`.`products_date_added`, `products`.`products_id`, `products`.`products_public`, `products`.`products_year`, `products`.`products_rating`, `products`.`imdb_id`, `products`.`package_id`, directors.`directors_id`, studio.`studio_id`, `products`.`serie_id`, `products`.`season_id`, `products`.`episode_id`, `products`.`rating_count` ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`products`.`products_id`), 1), IFNULL(MAX(`products`.`products_id`), 1) FROM `products` 
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = kind
  sql_attr_uint = country_id
  sql_attr_uint = product_id
  sql_attr_uint = vod_next
  sql_attr_uint = vod_next_lux
  sql_attr_uint = vod_next_nl
  sql_attr_uint = audience
  sql_attr_uint = year
  sql_attr_uint = dvdpost_rating
  sql_attr_uint = imdb_id
  sql_attr_uint = package_id
  sql_attr_uint = state
  sql_attr_uint = director_id
  sql_attr_uint = studio_id
  sql_attr_uint = serie_id
  sql_attr_uint = season_id
  sql_attr_uint = episode_id
  sql_attr_uint = rating_count
  sql_attr_uint = streaming_available_at_order
  sql_attr_uint = belgium_country
  sql_attr_uint = belgium_actor
  sql_attr_uint = belgium_director
  sql_attr_uint = belgium_land
  sql_attr_uint = count_tokens
  sql_attr_uint = streaming_studio_id
  sql_attr_uint = hd
  sql_attr_timestamp = available_at
  sql_attr_timestamp = created_at
  sql_attr_timestamp = streaming_expire_at
  sql_attr_timestamp = svod_start
  sql_attr_timestamp = svod_end
  sql_attr_timestamp = tvod_start
  sql_attr_timestamp = tvod_end
  sql_attr_float = rating
  sql_attr_multi = uint actors_id from field
  sql_attr_multi = uint category_id from field
  sql_attr_multi = uint streaming_imdb_id from field
  sql_attr_multi = uint language_ids from field
  sql_attr_multi = uint subtitle_ids from field
  sql_attr_multi = uint imdb_id_online from field
  sql_attr_multi = uint online_language_ids from field
  sql_attr_multi = uint online_subtitle_ids from field
  sql_attr_multi = uint audio_sub from field
  sql_attr_string = sphinx_internal_class
  sql_attr_string = descriptions_title_fr
  sql_attr_string = descriptions_title_nl
  sql_attr_string = descriptions_title_en
  sql_query_info = SELECT `products`.* FROM `products`  WHERE (`products`.`products_id` = ($id - 3) / 6)
}

index product_nl_core
{
  type = plain
  path = /home/popac/PROJECTS/DVDPost/moovies/db/sphinx/development/product_nl_core
  docinfo = extern
  morphology = stem_en, libstemmer_fr
  charset_type = utf-8
  charset_table = 0..9, a..z, _, A..Z->a..z, U+00C0->a, U+00C1->a,U+00C2->a, U+00C3->a, U+00C4->a, U+00C5->a, U+00C7->c, U+00C8->e,U+00C9->e, U+00CA->e, U+00CB->e, U+00CC->i, U+00CD->i, U+00CE->i,U+00CF->i, U+00D1->n, U+00D2->o, U+00D3->o, U+00D4->o, U+00D5->o,U+00D6->o, U+00D8->o, U+00D9->u, U+00DA->u, U+00DB->u, U+00DC->u,U+00DD->y, U+00E0->a, U+00E1->a, U+00E2->a, U+00E3->a, U+00E4->a,U+00E5->a, U+00E7->c, U+00E8->e, U+00E9->e, U+00EA->e, U+00EB->e,U+00EC->i, U+00ED->i, U+00EE->i, U+00EF->i, U+00F1->n, U+00F2->o,U+00F3->o, U+00F4->o, U+00F5->o, U+00F6->o, U+00F8->o, U+00F9->u,U+00FA->u, U+00FB->u, U+00FC->u, U+00FD->y, U+00FF->y, U+0100->a,U+0101->a, U+0102->a, U+0103->a, U+0104->a, U+0105->a, U+0106->c,U+0107->c, U+0108->c, U+0109->c, U+010A->c, U+010B->c, U+010C->c,U+010D->c, U+010E->d, U+010F->d, U+0112->e, U+0113->e, U+0114->e,U+0115->e, U+0116->e, U+0117->e, U+0118->e, U+0119->e, U+011A->e,U+011B->e, U+011C->g, U+011D->g, U+011E->g, U+011F->g, U+0120->g,U+0121->g, U+0122->g, U+0123->g, U+0124->h, U+0125->h, U+0128->i,U+0129->i, U+0131->i, U+012A->i, U+012B->i, U+012C->i, U+012D->i,U+012E->i, U+012F->i, U+0130->i, U+0134->j, U+0135->j, U+0136->k,U+0137->k, U+0139->l, U+013A->l, U+013B->l, U+013C->l, U+013D->l,U+013E->l, U+0142->l, U+0143->n, U+0144->n, U+0145->n, U+0146->n,U+0147->n, U+0148->n, U+014C->o, U+014D->o, U+014E->o, U+014F->o,U+0150->o, U+0151->o, U+0154->r, U+0155->r, U+0156->r, U+0157->r,U+0158->r, U+0159->r, U+015A->s, U+015B->s, U+015C->s, U+015D->s,U+015E->s, U+015F->s, U+0160->s, U+0161->s, U+0162->t, U+0163->t,U+0164->t, U+0165->t, U+0168->u, U+0169->u, U+016A->u, U+016B->u,U+016C->u, U+016D->u, U+016E->u, U+016F->u, U+0170->u, U+0171->u,U+0172->u, U+0173->u, U+0174->w, U+0175->w, U+0176->y, U+0177->y,U+0178->y, U+0179->z, U+017A->z, U+017B->z, U+017C->z, U+017D->z,U+017E->z, U+01A0->o, U+01A1->o, U+01AF->u, U+01B0->u, U+01CD->a,U+01CE->a, U+01CF->i, U+01D0->i, U+01D1->o, U+01D2->o, U+01D3->u,U+01D4->u, U+01D5->u, U+01D6->u, U+01D7->u, U+01D8->u, U+01D9->u,U+01DA->u, U+01DB->u, U+01DC->u, U+01DE->a, U+01DF->a, U+01E0->a,U+01E1->a, U+01E6->g, U+01E7->g, U+01E8->k, U+01E9->k, U+01EA->o,U+01EB->o, U+01EC->o, U+01ED->o, U+01F0->j, U+01F4->g, U+01F5->g,U+01F8->n, U+01F9->n, U+01FA->a, U+01FB->a, U+0200->a, U+0201->a,U+0202->a, U+0203->a, U+0204->e, U+0205->e, U+0206->e, U+0207->e,U+0208->i, U+0209->i, U+020A->i, U+020B->i, U+020C->o, U+020D->o,U+020E->o, U+020F->o, U+0210->r, U+0211->r, U+0212->r, U+0213->r,U+0214->u, U+0215->u, U+0216->u, U+0217->u, U+0218->s, U+0219->s,U+021A->t, U+021B->t, U+021E->h, U+021F->h, U+0226->a, U+0227->a,U+0228->e, U+0229->e, U+022A->o, U+022B->o, U+022C->o, U+022D->o,U+022E->o, U+022F->o, U+0230->o, U+0231->o, U+0232->y, U+0233->y,U+1E00->a, U+1E01->a, U+1E02->b, U+1E03->b, U+1E04->b, U+1E05->b,U+1E06->b, U+1E07->b, U+1E08->c, U+1E09->c, U+1E0A->d, U+1E0B->d,U+1E0C->d, U+1E0D->d, U+1E0E->d, U+1E0F->d, U+1E10->d, U+1E11->d,U+1E12->d, U+1E13->d, U+1E14->e, U+1E15->e, U+1E16->e, U+1E17->e,U+1E18->e, U+1E19->e, U+1E1A->e, U+1E1B->e, U+1E1C->e, U+1E1D->e,U+1E1E->f, U+1E1F->f, U+1E20->g, U+1E21->g, U+1E22->h, U+1E23->h,U+1E24->h, U+1E25->h, U+1E26->h, U+1E27->h, U+1E28->h, U+1E29->h,U+1E2A->h, U+1E2B->h, U+1E2C->i, U+1E2D->i, U+1E2E->i, U+1E2F->i,U+1E30->k, U+1E31->k, U+1E32->k, U+1E33->k, U+1E34->k, U+1E35->k,U+1E36->l, U+1E37->l, U+1E38->l, U+1E39->l, U+1E3A->l, U+1E3B->l,U+1E3C->l, U+1E3D->l, U+1E3E->m, U+1E3F->m, U+1E40->m, U+1E41->m,U+1E42->m, U+1E43->m, U+1E44->n, U+1E45->n, U+1E46->n, U+1E47->n,U+1E48->n, U+1E49->n, U+1E4A->n, U+1E4B->n, U+1E4C->o, U+1E4D->o,U+1E4E->o, U+1E4F->o, U+1E50->o, U+1E51->o, U+1E52->o, U+1E53->o,U+1E54->p, U+1E55->p, U+1E56->p, U+1E57->p, U+1E58->r, U+1E59->r,U+1E5A->r, U+1E5B->r, U+1E5C->r, U+1E5D->r, U+1E5E->r, U+1E5F->r,U+1E60->s, U+1E61->s, U+1E62->s, U+1E63->s, U+1E64->s, U+1E65->s,U+1E66->s, U+1E67->s, U+1E68->s, U+1E69->s, U+1E6A->t, U+1E6B->t,U+1E6C->t, U+1E6D->t, U+1E6E->t, U+1E6F->t, U+1E70->t, U+1E71->t,U+1E72->u, U+1E73->u, U+1E74->u, U+1E75->u, U+1E76->u, U+1E77->u,U+1E78->u, U+1E79->u, U+1E7A->u, U+1E7B->u, U+1E7C->v, U+1E7D->v,U+1E7E->v, U+1E7F->v, U+1E80->w, U+1E81->w, U+1E82->w, U+1E83->w,U+1E84->w, U+1E85->w, U+1E86->w, U+1E87->w, U+1E88->w, U+1E89->w,U+1E8A->x, U+1E8B->x, U+1E8C->x, U+1E8D->x, U+1E8E->y, U+1E8F->y,U+1E96->h, U+1E97->t, U+1E98->w, U+1E99->y, U+1EA0->a, U+1EA1->a,U+1EA2->a, U+1EA3->a, U+1EA4->a, U+1EA5->a, U+1EA6->a, U+1EA7->a,U+1EA8->a, U+1EA9->a, U+1EAA->a, U+1EAB->a, U+1EAC->a, U+1EAD->a,U+1EAE->a, U+1EAF->a, U+1EB0->a, U+1EB1->a, U+1EB2->a, U+1EB3->a,U+1EB4->a, U+1EB5->a, U+1EB6->a, U+1EB7->a, U+1EB8->e, U+1EB9->e,U+1EBA->e, U+1EBB->e, U+1EBC->e, U+1EBD->e, U+1EBE->e, U+1EBF->e,U+1EC0->e, U+1EC1->e, U+1EC2->e, U+1EC3->e, U+1EC4->e, U+1EC5->e,U+1EC6->e, U+1EC7->e, U+1EC8->i, U+1EC9->i, U+1ECA->i, U+1ECB->i,U+1ECC->o, U+1ECD->o, U+1ECE->o, U+1ECF->o, U+1ED0->o, U+1ED1->o,U+1ED2->o, U+1ED3->o, U+1ED4->o, U+1ED5->o, U+1ED6->o, U+1ED7->o,U+1ED8->o, U+1ED9->o, U+1EDA->o, U+1EDB->o, U+1EDC->o, U+1EDD->o,U+1EDE->o, U+1EDF->o, U+1EE0->o, U+1EE1->o, U+1EE2->o, U+1EE3->o,U+1EE4->u, U+1EE5->u, U+1EE6->u, U+1EE7->u, U+1EE8->u, U+1EE9->u,U+1EEA->u, U+1EEB->u, U+1EEC->u, U+1EED->u, U+1EEE->u, U+1EEF->u,U+1EF0->u, U+1EF1->u, U+1EF2->y, U+1EF3->y, U+1EF4->y, U+1EF5->y,U+1EF6->y, U+1EF7->y, U+1EF8->y, U+1EF9->y
  ignore_chars = U+AD
  min_prefix_len = 3
  enable_star = 1
  source = product_nl_core_0
}
